(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Vue,version,map=window.__VUE_HOT_MAP__=Object.create(null),installed=!1,isBrowserify=!1,initHookName="beforeCreate";function makeOptionsHot(e,o){if(o.functional){var n=o.render;o.render=function(o,t){var r=map[e].instances;return t&&r.indexOf(t.parent)<0&&r.push(t.parent),n(o,t)}}else injectHook(o,initHookName,function(){var o=map[e];o.Ctor||(o.Ctor=this.constructor),o.instances.push(this)}),injectHook(o,"beforeDestroy",function(){var o=map[e].instances;o.splice(o.indexOf(this),1)})}function injectHook(e,o,n){var t=e[o];e[o]=t?Array.isArray(t)?t.concat(n):[t,n]:[n]}function tryWrap(e){return function(o,n){try{e(o,n)}catch(e){console.error(e),console.warn("Something went wrong during Vue component hot-reload. Full reload required.")}}}function updateOptions(e,o){for(var n in e)n in o||delete e[n];for(var t in o)e[t]=o[t]}exports.install=function(e,o){installed||(installed=!0,Vue=e.__esModule?e.default:e,version=Vue.version.split(".").map(Number),isBrowserify=o,Vue.config._lifecycleHooks.indexOf("init")>-1&&(initHookName="init"),exports.compatible=version[0]>=2,exports.compatible||console.warn("[HMR] You are using a version of vue-hot-reload-api that is only compatible with Vue.js core ^2.0.0."))},exports.createRecord=function(e,o){var n=null;"function"==typeof o&&(o=(n=o).options),makeOptionsHot(e,o),map[e]={Ctor:n,options:o,instances:[]}},exports.rerender=tryWrap(function(e,o){var n=map[e];if(o){if("function"==typeof o&&(o=o.options),n.Ctor)n.Ctor.options.render=o.render,n.Ctor.options.staticRenderFns=o.staticRenderFns,n.instances.slice().forEach(function(e){e.$options.render=o.render,e.$options.staticRenderFns=o.staticRenderFns,e._staticTrees&&(e._staticTrees=[]),Array.isArray(n.Ctor.options.cached)&&(n.Ctor.options.cached=[]),Array.isArray(e.$options.cached)&&(e.$options.cached=[]),e.$forceUpdate()});else if(n.options.render=o.render,n.options.staticRenderFns=o.staticRenderFns,n.options.functional){if(Object.keys(o).length>2)updateOptions(n.options,o);else{var t=n.options._injectStyles;if(t){var r=o.render;n.options.render=function(e,o){return t.call(o),r(e,o)}}}n.options._Ctor=null,Array.isArray(n.options.cached)&&(n.options.cached=[]),n.instances.slice().forEach(function(e){e.$forceUpdate()})}}else n.instances.slice().forEach(function(e){e.$forceUpdate()})}),exports.reload=tryWrap(function(e,o){var n=map[e];if(o)if("function"==typeof o&&(o=o.options),makeOptionsHot(e,o),n.Ctor){version[1]<2&&(n.Ctor.extendOptions=o);var t=n.Ctor.super.extend(o);n.Ctor.options=t.options,n.Ctor.cid=t.cid,n.Ctor.prototype=t.prototype,t.release&&t.release()}else updateOptions(n.options,o);n.instances.slice().forEach(function(e){e.$vnode&&e.$vnode.context?e.$vnode.context.$forceUpdate():console.warn("Root or manually mounted instance modified. Full reload required.")})});

},{}],2:[function(require,module,exports){
(function (global){
"use strict";var emptyObject=Object.freeze({});function isUndef(e){return void 0===e||null===e}function isDef(e){return void 0!==e&&null!==e}function isTrue(e){return!0===e}function isFalse(e){return!1===e}function isPrimitive(e){return"string"==typeof e||"number"==typeof e||"boolean"==typeof e}function isObject(e){return null!==e&&"object"==typeof e}var _toString=Object.prototype.toString;function toRawType(e){return _toString.call(e).slice(8,-1)}function isPlainObject(e){return"[object Object]"===_toString.call(e)}function isRegExp(e){return"[object RegExp]"===_toString.call(e)}function isValidArrayIndex(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function toString(e){return null==e?"":"object"==typeof e?JSON.stringify(e,null,2):String(e)}function toNumber(e){var t=parseFloat(e);return isNaN(t)?e:t}function makeMap(e,t){for(var n=Object.create(null),r=e.split(","),i=0;i<r.length;i++)n[r[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var isBuiltInTag=makeMap("slot,component",!0),isReservedAttribute=makeMap("key,ref,slot,slot-scope,is");function remove(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var hasOwnProperty=Object.prototype.hasOwnProperty;function hasOwn(e,t){return hasOwnProperty.call(e,t)}function cached(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var camelizeRE=/-(\w)/g,camelize=cached(function(e){return e.replace(camelizeRE,function(e,t){return t?t.toUpperCase():""})}),capitalize=cached(function(e){return e.charAt(0).toUpperCase()+e.slice(1)}),hyphenateRE=/\B([A-Z])/g,hyphenate=cached(function(e){return e.replace(hyphenateRE,"-$1").toLowerCase()});function bind(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n}function toArray(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function extend(e,t){for(var n in t)e[n]=t[n];return e}function toObject(e){for(var t={},n=0;n<e.length;n++)e[n]&&extend(t,e[n]);return t}function noop(e,t,n){}var no=function(e,t,n){return!1},identity=function(e){return e};function looseEqual(e,t){if(e===t)return!0;var n=isObject(e),r=isObject(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var i=Array.isArray(e),o=Array.isArray(t);if(i&&o)return e.length===t.length&&e.every(function(e,n){return looseEqual(e,t[n])});if(i||o)return!1;var a=Object.keys(e),s=Object.keys(t);return a.length===s.length&&a.every(function(n){return looseEqual(e[n],t[n])})}catch(e){return!1}}function looseIndexOf(e,t){for(var n=0;n<e.length;n++)if(looseEqual(e[n],t))return n;return-1}function once(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var SSR_ATTR="data-server-rendered",ASSET_TYPES=["component","directive","filter"],LIFECYCLE_HOOKS=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured"],config={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:no,isReservedAttr:no,isUnknownElement:no,getTagNamespace:noop,parsePlatformTagName:identity,mustUseProp:no,_lifecycleHooks:LIFECYCLE_HOOKS};function isReserved(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function def(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var bailRE=/[^\w.$]/;function parsePath(e){if(!bailRE.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}var _isServer,hasProto="__proto__"in{},inBrowser="undefined"!=typeof window,inWeex="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,weexPlatform=inWeex&&WXEnvironment.platform.toLowerCase(),UA=inBrowser&&window.navigator.userAgent.toLowerCase(),isIE=UA&&/msie|trident/.test(UA),isIE9=UA&&UA.indexOf("msie 9.0")>0,isEdge=UA&&UA.indexOf("edge/")>0,isAndroid=UA&&UA.indexOf("android")>0||"android"===weexPlatform,isIOS=UA&&/iphone|ipad|ipod|ios/.test(UA)||"ios"===weexPlatform,isChrome=UA&&/chrome\/\d+/.test(UA)&&!isEdge,nativeWatch={}.watch,supportsPassive=!1;if(inBrowser)try{var opts={};Object.defineProperty(opts,"passive",{get:function(){supportsPassive=!0}}),window.addEventListener("test-passive",null,opts)}catch(e){}var isServerRendering=function(){return void 0===_isServer&&(_isServer=!inBrowser&&"undefined"!=typeof global&&"server"===global.process.env.VUE_ENV),_isServer},devtools=inBrowser&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function isNative(e){return"function"==typeof e&&/native code/.test(e.toString())}var _Set,hasSymbol="undefined"!=typeof Symbol&&isNative(Symbol)&&"undefined"!=typeof Reflect&&isNative(Reflect.ownKeys);_Set="undefined"!=typeof Set&&isNative(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var hasConsole,classifyRE,classify,repeat,warn=noop,tip=noop,generateComponentTrace=noop,formatComponentName=noop,uid$1=0,Dep=function(){this.id=uid$1++,this.subs=[]};Dep.prototype.addSub=function(e){this.subs.push(e)},Dep.prototype.removeSub=function(e){remove(this.subs,e)},Dep.prototype.depend=function(){Dep.target&&Dep.target.addDep(this)},Dep.prototype.notify=function(){for(var e=this.subs.slice(),t=0,n=e.length;t<n;t++)e[t].update()},Dep.target=null;var targetStack=[];function pushTarget(e){Dep.target&&targetStack.push(Dep.target),Dep.target=e}function popTarget(){Dep.target=targetStack.pop()}var VNode=function(e,t,n,r,i,o,a,s){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=i,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},prototypeAccessors={child:{configurable:!0}};prototypeAccessors.child.get=function(){return this.componentInstance},Object.defineProperties(VNode.prototype,prototypeAccessors);var createEmptyVNode=function(e){void 0===e&&(e="");var t=new VNode;return t.text=e,t.isComment=!0,t};function createTextVNode(e){return new VNode(void 0,void 0,void 0,String(e))}function cloneVNode(e,t){var n=e.componentOptions,r=new VNode(e.tag,e.data,e.children,e.text,e.elm,e.context,n,e.asyncFactory);return r.ns=e.ns,r.isStatic=e.isStatic,r.key=e.key,r.isComment=e.isComment,r.fnContext=e.fnContext,r.fnOptions=e.fnOptions,r.fnScopeId=e.fnScopeId,r.isCloned=!0,t&&(e.children&&(r.children=cloneVNodes(e.children,!0)),n&&n.children&&(n.children=cloneVNodes(n.children,!0))),r}function cloneVNodes(e,t){for(var n=e.length,r=new Array(n),i=0;i<n;i++)r[i]=cloneVNode(e[i],t);return r}var arrayProto=Array.prototype,arrayMethods=Object.create(arrayProto);["push","pop","shift","unshift","splice","sort","reverse"].forEach(function(e){var t=arrayProto[e];def(arrayMethods,e,function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var i,o=t.apply(this,n),a=this.__ob__;switch(e){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&a.observeArray(i),a.dep.notify(),o})});var arrayKeys=Object.getOwnPropertyNames(arrayMethods),observerState={shouldConvert:!0},Observer=function(e){(this.value=e,this.dep=new Dep,this.vmCount=0,def(e,"__ob__",this),Array.isArray(e))?((hasProto?protoAugment:copyAugment)(e,arrayMethods,arrayKeys),this.observeArray(e)):this.walk(e)};function protoAugment(e,t,n){e.__proto__=t}function copyAugment(e,t,n){for(var r=0,i=n.length;r<i;r++){var o=n[r];def(e,o,t[o])}}function observe(e,t){var n;if(isObject(e)&&!(e instanceof VNode))return hasOwn(e,"__ob__")&&e.__ob__ instanceof Observer?n=e.__ob__:observerState.shouldConvert&&!isServerRendering()&&(Array.isArray(e)||isPlainObject(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Observer(e)),t&&n&&n.vmCount++,n}function defineReactive(e,t,n,r,i){var o=new Dep,a=Object.getOwnPropertyDescriptor(e,t);if(!a||!1!==a.configurable){var s=a&&a.get,c=a&&a.set,l=!i&&observe(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return Dep.target&&(o.depend(),l&&(l.dep.depend(),Array.isArray(t)&&dependArray(t))),t},set:function(t){var r=s?s.call(e):n;t===r||t!=t&&r!=r||(c?c.call(e,t):n=t,l=!i&&observe(t),o.notify())}})}}function set(e,t,n){if(Array.isArray(e)&&isValidArrayIndex(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var r=e.__ob__;return e._isVue||r&&r.vmCount?n:r?(defineReactive(r.value,t,n),r.dep.notify(),n):(e[t]=n,n)}function del(e,t){if(Array.isArray(e)&&isValidArrayIndex(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||hasOwn(e,t)&&(delete e[t],n&&n.dep.notify())}}function dependArray(e){for(var t=void 0,n=0,r=e.length;n<r;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&dependArray(t)}Observer.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)defineReactive(e,t[n],e[t[n]])},Observer.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)observe(e[t])};var strats=config.optionMergeStrategies;function mergeData(e,t){if(!t)return e;for(var n,r,i,o=Object.keys(t),a=0;a<o.length;a++)r=e[n=o[a]],i=t[n],hasOwn(e,n)?isPlainObject(r)&&isPlainObject(i)&&mergeData(r,i):set(e,n,i);return e}function mergeDataOrFn(e,t,n){return n?function(){var r="function"==typeof t?t.call(n,n):t,i="function"==typeof e?e.call(n,n):e;return r?mergeData(r,i):i}:t?e?function(){return mergeData("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function mergeHook(e,t){return t?e?e.concat(t):Array.isArray(t)?t:[t]:e}function mergeAssets(e,t,n,r){var i=Object.create(e||null);return t?extend(i,t):i}strats.data=function(e,t,n){return n?mergeDataOrFn(e,t,n):t&&"function"!=typeof t?e:mergeDataOrFn(e,t)},LIFECYCLE_HOOKS.forEach(function(e){strats[e]=mergeHook}),ASSET_TYPES.forEach(function(e){strats[e+"s"]=mergeAssets}),strats.watch=function(e,t,n,r){if(e===nativeWatch&&(e=void 0),t===nativeWatch&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var i={};for(var o in extend(i,e),t){var a=i[o],s=t[o];a&&!Array.isArray(a)&&(a=[a]),i[o]=a?a.concat(s):Array.isArray(s)?s:[s]}return i},strats.props=strats.methods=strats.inject=strats.computed=function(e,t,n,r){if(!e)return t;var i=Object.create(null);return extend(i,e),t&&extend(i,t),i},strats.provide=mergeDataOrFn;var defaultStrat=function(e,t){return void 0===t?e:t};function checkComponents(e){for(var t in e.components)validateComponentName(t)}function validateComponentName(e){/^[a-zA-Z][\w-]*$/.test(e)||warn('Invalid component name: "'+e+'". Component names can only contain alphanumeric characters and the hyphen, and must start with a letter.'),(isBuiltInTag(e)||config.isReservedTag(e))&&warn("Do not use built-in or reserved HTML elements as component id: "+e)}function normalizeProps(e,t){var n=e.props;if(n){var r,i,o={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(i=n[r])&&(o[camelize(i)]={type:null});else if(isPlainObject(n))for(var a in n)i=n[a],o[camelize(a)]=isPlainObject(i)?i:{type:i};else 0;e.props=o}}var propOptionsRE=/^(type|default|required|validator)$/;function validatePropObject(e,t,n){for(var r in t)propOptionsRE.test(r)||warn('Invalid key "'+r+'" in validation rules object for prop "'+e+'".',n)}function normalizeInject(e,t){var n=e.inject,r=e.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)r[n[i]]={from:n[i]};else if(isPlainObject(n))for(var o in n){var a=n[o];r[o]=isPlainObject(a)?extend({from:o},a):{from:a}}else 0}function normalizeDirectives(e){var t=e.directives;if(t)for(var n in t){var r=t[n];"function"==typeof r&&(t[n]={bind:r,update:r})}}function assertObjectType(e,t,n){isPlainObject(t)||warn('Invalid value for option "'+e+'": expected an Object, but got '+toRawType(t)+".",n)}function mergeOptions(e,t,n){"function"==typeof t&&(t=t.options),normalizeProps(t,n),normalizeInject(t,n),normalizeDirectives(t);var r=t.extends;if(r&&(e=mergeOptions(e,r,n)),t.mixins)for(var i=0,o=t.mixins.length;i<o;i++)e=mergeOptions(e,t.mixins[i],n);var a,s={};for(a in e)c(a);for(a in t)hasOwn(e,a)||c(a);function c(r){var i=strats[r]||defaultStrat;s[r]=i(e[r],t[r],n,r)}return s}function resolveAsset(e,t,n,r){if("string"==typeof n){var i=e[t];if(hasOwn(i,n))return i[n];var o=camelize(n);if(hasOwn(i,o))return i[o];var a=capitalize(o);if(hasOwn(i,a))return i[a];var s=i[n]||i[o]||i[a];return s}}function validateProp(e,t,n,r){var i=t[e],o=!hasOwn(n,e),a=n[e];if(isType(Boolean,i.type)&&(o&&!hasOwn(i,"default")?a=!1:isType(String,i.type)||""!==a&&a!==hyphenate(e)||(a=!0)),void 0===a){a=getPropDefaultValue(r,i,e);var s=observerState.shouldConvert;observerState.shouldConvert=!0,observe(a),observerState.shouldConvert=s}return a}function getPropDefaultValue(e,t,n){if(hasOwn(t,"default")){var r=t.default;return e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n]?e._props[n]:"function"==typeof r&&"Function"!==getType(t.type)?r.call(e):r}}function assertProp(e,t,n,r,i){if(e.required&&i)warn('Missing required prop: "'+t+'"',r);else if(null!=n||e.required){var o=e.type,a=!o||!0===o,s=[];if(o){Array.isArray(o)||(o=[o]);for(var c=0;c<o.length&&!a;c++){var l=assertType(n,o[c]);s.push(l.expectedType||""),a=l.valid}}if(a){var d=e.validator;d&&(d(n)||warn('Invalid prop: custom validator check failed for prop "'+t+'".',r))}else warn('Invalid prop: type check failed for prop "'+t+'". Expected '+s.map(capitalize).join(", ")+", got "+toRawType(n)+".",r)}}var simpleCheckRE=/^(String|Number|Boolean|Function|Symbol)$/;function assertType(e,t){var n,r=getType(t);if(simpleCheckRE.test(r)){var i=typeof e;(n=i===r.toLowerCase())||"object"!==i||(n=e instanceof t)}else n="Object"===r?isPlainObject(e):"Array"===r?Array.isArray(e):e instanceof t;return{valid:n,expectedType:r}}function getType(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function isType(e,t){if(!Array.isArray(t))return getType(t)===getType(e);for(var n=0,r=t.length;n<r;n++)if(getType(t[n])===getType(e))return!0;return!1}function handleError(e,t,n){if(t)for(var r=t;r=r.$parent;){var i=r.$options.errorCaptured;if(i)for(var o=0;o<i.length;o++)try{if(!1===i[o].call(r,e,t,n))return}catch(e){globalHandleError(e,r,"errorCaptured hook")}}globalHandleError(e,t,n)}function globalHandleError(e,t,n){if(config.errorHandler)try{return config.errorHandler.call(null,e,t,n)}catch(e){logError(e,null,"config.errorHandler")}logError(e,t,n)}function logError(e,t,n){if(!inBrowser&&!inWeex||"undefined"==typeof console)throw e;console.error(e)}var microTimerFunc,macroTimerFunc,callbacks=[],pending=!1;function flushCallbacks(){pending=!1;var e=callbacks.slice(0);callbacks.length=0;for(var t=0;t<e.length;t++)e[t]()}var initProxy,allowedGlobals,warnNonPresent,hasProxy,isBuiltInModifier,hasHandler,getHandler,useMacroTask=!1;if("undefined"!=typeof setImmediate&&isNative(setImmediate))macroTimerFunc=function(){setImmediate(flushCallbacks)};else if("undefined"==typeof MessageChannel||!isNative(MessageChannel)&&"[object MessageChannelConstructor]"!==MessageChannel.toString())macroTimerFunc=function(){setTimeout(flushCallbacks,0)};else{var channel=new MessageChannel,port=channel.port2;channel.port1.onmessage=flushCallbacks,macroTimerFunc=function(){port.postMessage(1)}}if("undefined"!=typeof Promise&&isNative(Promise)){var p=Promise.resolve();microTimerFunc=function(){p.then(flushCallbacks),isIOS&&setTimeout(noop)}}else microTimerFunc=macroTimerFunc;function withMacroTask(e){return e._withTask||(e._withTask=function(){useMacroTask=!0;var t=e.apply(null,arguments);return useMacroTask=!1,t})}function nextTick(e,t){var n;if(callbacks.push(function(){if(e)try{e.call(t)}catch(e){handleError(e,t,"nextTick")}else n&&n(t)}),pending||(pending=!0,useMacroTask?macroTimerFunc():microTimerFunc()),!e&&"undefined"!=typeof Promise)return new Promise(function(e){n=e})}var mark,measure,perf,seenObjects=new _Set;function traverse(e){_traverse(e,seenObjects),seenObjects.clear()}function _traverse(e,t){var n,r,i=Array.isArray(e);if((i||isObject(e))&&!Object.isFrozen(e)){if(e.__ob__){var o=e.__ob__.dep.id;if(t.has(o))return;t.add(o)}if(i)for(n=e.length;n--;)_traverse(e[n],t);else for(n=(r=Object.keys(e)).length;n--;)_traverse(e[r[n]],t)}}var target,normalizeEvent=cached(function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),r="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:n,capture:r,passive:t}});function createFnInvoker(e){function t(){var e=arguments,n=t.fns;if(!Array.isArray(n))return n.apply(null,arguments);for(var r=n.slice(),i=0;i<r.length;i++)r[i].apply(null,e)}return t.fns=e,t}function updateListeners(e,t,n,r,i){var o,a,s,c;for(o in e)a=e[o],s=t[o],c=normalizeEvent(o),isUndef(a)||(isUndef(s)?(isUndef(a.fns)&&(a=e[o]=createFnInvoker(a)),n(c.name,a,c.once,c.capture,c.passive)):a!==s&&(s.fns=a,e[o]=s));for(o in t)isUndef(e[o])&&r((c=normalizeEvent(o)).name,t[o],c.capture)}function mergeVNodeHook(e,t,n){var r;e instanceof VNode&&(e=e.data.hook||(e.data.hook={}));var i=e[t];function o(){n.apply(this,arguments),remove(r.fns,o)}isUndef(i)?r=createFnInvoker([o]):isDef(i.fns)&&isTrue(i.merged)?(r=i).fns.push(o):r=createFnInvoker([i,o]),r.merged=!0,e[t]=r}function extractPropsFromVNodeData(e,t,n){var r=t.options.props;if(!isUndef(r)){var i={},o=e.attrs,a=e.props;if(isDef(o)||isDef(a))for(var s in r){var c=hyphenate(s);checkProp(i,a,s,c,!0)||checkProp(i,o,s,c,!1)}return i}}function checkProp(e,t,n,r,i){if(isDef(t)){if(hasOwn(t,n))return e[n]=t[n],i||delete t[n],!0;if(hasOwn(t,r))return e[n]=t[r],i||delete t[r],!0}return!1}function simpleNormalizeChildren(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}function normalizeChildren(e){return isPrimitive(e)?[createTextVNode(e)]:Array.isArray(e)?normalizeArrayChildren(e):void 0}function isTextNode(e){return isDef(e)&&isDef(e.text)&&isFalse(e.isComment)}function normalizeArrayChildren(e,t){var n,r,i,o,a=[];for(n=0;n<e.length;n++)isUndef(r=e[n])||"boolean"==typeof r||(o=a[i=a.length-1],Array.isArray(r)?r.length>0&&(isTextNode((r=normalizeArrayChildren(r,(t||"")+"_"+n))[0])&&isTextNode(o)&&(a[i]=createTextVNode(o.text+r[0].text),r.shift()),a.push.apply(a,r)):isPrimitive(r)?isTextNode(o)?a[i]=createTextVNode(o.text+r):""!==r&&a.push(createTextVNode(r)):isTextNode(r)&&isTextNode(o)?a[i]=createTextVNode(o.text+r.text):(isTrue(e._isVList)&&isDef(r.tag)&&isUndef(r.key)&&isDef(t)&&(r.key="__vlist"+t+"_"+n+"__"),a.push(r)));return a}function ensureCtor(e,t){return(e.__esModule||hasSymbol&&"Module"===e[Symbol.toStringTag])&&(e=e.default),isObject(e)?t.extend(e):e}function createAsyncPlaceholder(e,t,n,r,i){var o=createEmptyVNode();return o.asyncFactory=e,o.asyncMeta={data:t,context:n,children:r,tag:i},o}function resolveAsyncComponent(e,t,n){if(isTrue(e.error)&&isDef(e.errorComp))return e.errorComp;if(isDef(e.resolved))return e.resolved;if(isTrue(e.loading)&&isDef(e.loadingComp))return e.loadingComp;if(!isDef(e.contexts)){var r=e.contexts=[n],i=!0,o=function(){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate()},a=once(function(n){e.resolved=ensureCtor(n,t),i||o()}),s=once(function(t){isDef(e.errorComp)&&(e.error=!0,o())}),c=e(a,s);return isObject(c)&&("function"==typeof c.then?isUndef(e.resolved)&&c.then(a,s):isDef(c.component)&&"function"==typeof c.component.then&&(c.component.then(a,s),isDef(c.error)&&(e.errorComp=ensureCtor(c.error,t)),isDef(c.loading)&&(e.loadingComp=ensureCtor(c.loading,t),0===c.delay?e.loading=!0:setTimeout(function(){isUndef(e.resolved)&&isUndef(e.error)&&(e.loading=!0,o())},c.delay||200)),isDef(c.timeout)&&setTimeout(function(){isUndef(e.resolved)&&s(null)},c.timeout))),i=!1,e.loading?e.loadingComp:e.resolved}e.contexts.push(n)}function isAsyncPlaceholder(e){return e.isComment&&e.asyncFactory}function getFirstComponentChild(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(isDef(n)&&(isDef(n.componentOptions)||isAsyncPlaceholder(n)))return n}}function initEvents(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&updateComponentListeners(e,t)}function add(e,t,n){n?target.$once(e,t):target.$on(e,t)}function remove$1(e,t){target.$off(e,t)}function updateComponentListeners(e,t,n){target=e,updateListeners(t,n||{},add,remove$1,e),target=void 0}function eventsMixin(e){var t=/^hook:/;e.prototype.$on=function(e,n){if(Array.isArray(e))for(var r=0,i=e.length;r<i;r++)this.$on(e[r],n);else(this._events[e]||(this._events[e]=[])).push(n),t.test(e)&&(this._hasHookEvent=!0);return this},e.prototype.$once=function(e,t){var n=this;function r(){n.$off(e,r),t.apply(n,arguments)}return r.fn=t,n.$on(e,r),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var r=0,i=e.length;r<i;r++)this.$off(e[r],t);return n}var o=n._events[e];if(!o)return n;if(!t)return n._events[e]=null,n;if(t)for(var a,s=o.length;s--;)if((a=o[s])===t||a.fn===t){o.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?toArray(n):n;for(var r=toArray(arguments,1),i=0,o=n.length;i<o;i++)try{n[i].apply(t,r)}catch(n){handleError(n,t,'event handler for "'+e+'"')}}return t}}function resolveSlots(e,t){var n={};if(!e)return n;for(var r=0,i=e.length;r<i;r++){var o=e[r],a=o.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,o.context!==t&&o.fnContext!==t||!a||null==a.slot)(n.default||(n.default=[])).push(o);else{var s=a.slot,c=n[s]||(n[s]=[]);"template"===o.tag?c.push.apply(c,o.children||[]):c.push(o)}}for(var l in n)n[l].every(isWhitespace)&&delete n[l];return n}function isWhitespace(e){return e.isComment&&!e.asyncFactory||" "===e.text}function resolveScopedSlots(e,t){t=t||{};for(var n=0;n<e.length;n++)Array.isArray(e[n])?resolveScopedSlots(e[n],t):t[e[n].key]=e[n].fn;return t}var activeInstance=null,isUpdatingChildComponent=!1;function initLifecycle(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}function lifecycleMixin(e){e.prototype._update=function(e,t){var n=this;n._isMounted&&callHook(n,"beforeUpdate");var r=n.$el,i=n._vnode,o=activeInstance;activeInstance=n,n._vnode=e,i?n.$el=n.__patch__(i,e):(n.$el=n.__patch__(n.$el,e,t,!1,n.$options._parentElm,n.$options._refElm),n.$options._parentElm=n.$options._refElm=null),activeInstance=o,r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){callHook(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||remove(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),callHook(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}function mountComponent(e,t,n){return e.$el=t,e.$options.render||(e.$options.render=createEmptyVNode),callHook(e,"beforeMount"),new Watcher(e,function(){e._update(e._render(),n)},noop,null,!0),n=!1,null==e.$vnode&&(e._isMounted=!0,callHook(e,"mounted")),e}function updateChildComponent(e,t,n,r,i){var o=!!(i||e.$options._renderChildren||r.data.scopedSlots||e.$scopedSlots!==emptyObject);if(e.$options._parentVnode=r,e.$vnode=r,e._vnode&&(e._vnode.parent=r),e.$options._renderChildren=i,e.$attrs=r.data&&r.data.attrs||emptyObject,e.$listeners=n||emptyObject,t&&e.$options.props){observerState.shouldConvert=!1;for(var a=e._props,s=e.$options._propKeys||[],c=0;c<s.length;c++){var l=s[c];a[l]=validateProp(l,e.$options.props,t,e)}observerState.shouldConvert=!0,e.$options.propsData=t}if(n){var d=e.$options._parentListeners;e.$options._parentListeners=n,updateComponentListeners(e,n,d)}o&&(e.$slots=resolveSlots(i,r.context),e.$forceUpdate())}function isInInactiveTree(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function activateChildComponent(e,t){if(t){if(e._directInactive=!1,isInInactiveTree(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)activateChildComponent(e.$children[n]);callHook(e,"activated")}}function deactivateChildComponent(e,t){if(!(t&&(e._directInactive=!0,isInInactiveTree(e))||e._inactive)){e._inactive=!0;for(var n=0;n<e.$children.length;n++)deactivateChildComponent(e.$children[n]);callHook(e,"deactivated")}}function callHook(e,t){var n=e.$options[t];if(n)for(var r=0,i=n.length;r<i;r++)try{n[r].call(e)}catch(n){handleError(n,e,t+" hook")}e._hasHookEvent&&e.$emit("hook:"+t)}var MAX_UPDATE_COUNT=100,queue=[],activatedChildren=[],has={},circular={},waiting=!1,flushing=!1,index=0;function resetSchedulerState(){index=queue.length=activatedChildren.length=0,has={},waiting=flushing=!1}function flushSchedulerQueue(){var e,t;for(flushing=!0,queue.sort(function(e,t){return e.id-t.id}),index=0;index<queue.length;index++)t=(e=queue[index]).id,has[t]=null,e.run();var n=activatedChildren.slice(),r=queue.slice();resetSchedulerState(),callActivatedHooks(n),callUpdatedHooks(r),devtools&&config.devtools&&devtools.emit("flush")}function callUpdatedHooks(e){for(var t=e.length;t--;){var n=e[t],r=n.vm;r._watcher===n&&r._isMounted&&callHook(r,"updated")}}function queueActivatedComponent(e){e._inactive=!1,activatedChildren.push(e)}function callActivatedHooks(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,activateChildComponent(e[t],!0)}function queueWatcher(e){var t=e.id;if(null==has[t]){if(has[t]=!0,flushing){for(var n=queue.length-1;n>index&&queue[n].id>e.id;)n--;queue.splice(n+1,0,e)}else queue.push(e);waiting||(waiting=!0,nextTick(flushSchedulerQueue))}}var uid$2=0,Watcher=function(e,t,n,r,i){this.vm=e,i&&(e._watcher=this),e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++uid$2,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new _Set,this.newDepIds=new _Set,this.expression="","function"==typeof t?this.getter=t:(this.getter=parsePath(t),this.getter||(this.getter=function(){})),this.value=this.lazy?void 0:this.get()};Watcher.prototype.get=function(){var e;pushTarget(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;handleError(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&traverse(e),popTarget(),this.cleanupDeps()}return e},Watcher.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},Watcher.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},Watcher.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():queueWatcher(this)},Watcher.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||isObject(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){handleError(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,t)}}},Watcher.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},Watcher.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},Watcher.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||remove(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var sharedPropertyDefinition={enumerable:!0,configurable:!0,get:noop,set:noop};function proxy(e,t,n){sharedPropertyDefinition.get=function(){return this[t][n]},sharedPropertyDefinition.set=function(e){this[t][n]=e},Object.defineProperty(e,n,sharedPropertyDefinition)}function initState(e){e._watchers=[];var t=e.$options;t.props&&initProps(e,t.props),t.methods&&initMethods(e,t.methods),t.data?initData(e):observe(e._data={},!0),t.computed&&initComputed(e,t.computed),t.watch&&t.watch!==nativeWatch&&initWatch(e,t.watch)}function initProps(e,t){var n=e.$options.propsData||{},r=e._props={},i=e.$options._propKeys=[],o=!e.$parent;observerState.shouldConvert=o;var a=function(o){i.push(o);var a=validateProp(o,t,n,e);defineReactive(r,o,a),o in e||proxy(e,"_props",o)};for(var s in t)a(s);observerState.shouldConvert=!0}function initData(e){var t=e.$options.data;isPlainObject(t=e._data="function"==typeof t?getData(t,e):t||{})||(t={});for(var n=Object.keys(t),r=e.$options.props,i=(e.$options.methods,n.length);i--;){var o=n[i];0,r&&hasOwn(r,o)||isReserved(o)||proxy(e,"_data",o)}observe(t,!0)}function getData(e,t){try{return e.call(t,t)}catch(e){return handleError(e,t,"data()"),{}}}var computedWatcherOptions={lazy:!0};function initComputed(e,t){var n=e._computedWatchers=Object.create(null),r=isServerRendering();for(var i in t){var o=t[i],a="function"==typeof o?o:o.get;0,r||(n[i]=new Watcher(e,a||noop,noop,computedWatcherOptions)),i in e||defineComputed(e,i,o)}}function defineComputed(e,t,n){var r=!isServerRendering();"function"==typeof n?(sharedPropertyDefinition.get=r?createComputedGetter(t):n,sharedPropertyDefinition.set=noop):(sharedPropertyDefinition.get=n.get?r&&!1!==n.cache?createComputedGetter(t):n.get:noop,sharedPropertyDefinition.set=n.set?n.set:noop),Object.defineProperty(e,t,sharedPropertyDefinition)}function createComputedGetter(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),Dep.target&&t.depend(),t.value}}function initMethods(e,t){e.$options.props;for(var n in t)e[n]=null==t[n]?noop:bind(t[n],e)}function initWatch(e,t){for(var n in t){var r=t[n];if(Array.isArray(r))for(var i=0;i<r.length;i++)createWatcher(e,n,r[i]);else createWatcher(e,n,r)}}function createWatcher(e,t,n,r){return isPlainObject(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,r)}function stateMixin(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=set,e.prototype.$delete=del,e.prototype.$watch=function(e,t,n){if(isPlainObject(t))return createWatcher(this,e,t,n);(n=n||{}).user=!0;var r=new Watcher(this,e,t,n);return n.immediate&&t.call(this,r.value),function(){r.teardown()}}}function initProvide(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}function initInjections(e){var t=resolveInject(e.$options.inject,e);t&&(observerState.shouldConvert=!1,Object.keys(t).forEach(function(n){defineReactive(e,n,t[n])}),observerState.shouldConvert=!0)}function resolveInject(e,t){if(e){for(var n=Object.create(null),r=hasSymbol?Reflect.ownKeys(e).filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}):Object.keys(e),i=0;i<r.length;i++){for(var o=r[i],a=e[o].from,s=t;s;){if(s._provided&&a in s._provided){n[o]=s._provided[a];break}s=s.$parent}if(!s)if("default"in e[o]){var c=e[o].default;n[o]="function"==typeof c?c.call(t):c}else 0}return n}}function renderList(e,t){var n,r,i,o,a;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),r=0,i=e.length;r<i;r++)n[r]=t(e[r],r);else if("number"==typeof e)for(n=new Array(e),r=0;r<e;r++)n[r]=t(r+1,r);else if(isObject(e))for(o=Object.keys(e),n=new Array(o.length),r=0,i=o.length;r<i;r++)a=o[r],n[r]=t(e[a],a,r);return isDef(n)&&(n._isVList=!0),n}function renderSlot(e,t,n,r){var i,o=this.$scopedSlots[e];if(o)n=n||{},r&&(n=extend(extend({},r),n)),i=o(n)||t;else{var a=this.$slots[e];a&&(a._rendered=!0),i=a||t}var s=n&&n.slot;return s?this.$createElement("template",{slot:s},i):i}function resolveFilter(e){return resolveAsset(this.$options,"filters",e,!0)||identity}function checkKeyCodes(e,t,n,r){var i=config.keyCodes[t]||n;return i?Array.isArray(i)?-1===i.indexOf(e):i!==e:r?hyphenate(r)!==t:void 0}function bindObjectProps(e,t,n,r,i){if(n)if(isObject(n)){var o;Array.isArray(n)&&(n=toObject(n));var a=function(a){if("class"===a||"style"===a||isReservedAttribute(a))o=e;else{var s=e.attrs&&e.attrs.type;o=r||config.mustUseProp(t,s,a)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}a in o||(o[a]=n[a],i&&((e.on||(e.on={}))["update:"+a]=function(e){n[a]=e}))};for(var s in n)a(s)}else;return e}function renderStatic(e,t){var n=this._staticTrees||(this._staticTrees=[]),r=n[e];return r&&!t?Array.isArray(r)?cloneVNodes(r):cloneVNode(r):(markStatic(r=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),r)}function markOnce(e,t,n){return markStatic(e,"__once__"+t+(n?"_"+n:""),!0),e}function markStatic(e,t,n){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&markStaticNode(e[r],t+"_"+r,n);else markStaticNode(e,t,n)}function markStaticNode(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function bindObjectListeners(e,t){if(t)if(isPlainObject(t)){var n=e.on=e.on?extend({},e.on):{};for(var r in t){var i=n[r],o=t[r];n[r]=i?[].concat(i,o):o}}else;return e}function installRenderHelpers(e){e._o=markOnce,e._n=toNumber,e._s=toString,e._l=renderList,e._t=renderSlot,e._q=looseEqual,e._i=looseIndexOf,e._m=renderStatic,e._f=resolveFilter,e._k=checkKeyCodes,e._b=bindObjectProps,e._v=createTextVNode,e._e=createEmptyVNode,e._u=resolveScopedSlots,e._g=bindObjectListeners}function FunctionalRenderContext(e,t,n,r,i){var o=i.options;this.data=e,this.props=t,this.children=n,this.parent=r,this.listeners=e.on||emptyObject,this.injections=resolveInject(o.inject,r),this.slots=function(){return resolveSlots(n,r)};var a=Object.create(r),s=isTrue(o._compiled),c=!s;s&&(this.$options=o,this.$slots=this.slots(),this.$scopedSlots=e.scopedSlots||emptyObject),o._scopeId?this._c=function(e,t,n,i){var s=createElement(a,e,t,n,i,c);return s&&(s.fnScopeId=o._scopeId,s.fnContext=r),s}:this._c=function(e,t,n,r){return createElement(a,e,t,n,r,c)}}function createFunctionalComponent(e,t,n,r,i){var o=e.options,a={},s=o.props;if(isDef(s))for(var c in s)a[c]=validateProp(c,s,t||emptyObject);else isDef(n.attrs)&&mergeProps(a,n.attrs),isDef(n.props)&&mergeProps(a,n.props);var l=new FunctionalRenderContext(n,a,i,r,e),d=o.render.call(null,l._c,l);return d instanceof VNode&&(d.fnContext=r,d.fnOptions=o,n.slot&&((d.data||(d.data={})).slot=n.slot)),d}function mergeProps(e,t){for(var n in t)e[camelize(n)]=t[n]}installRenderHelpers(FunctionalRenderContext.prototype);var componentVNodeHooks={init:function(e,t,n,r){if(!e.componentInstance||e.componentInstance._isDestroyed)(e.componentInstance=createComponentInstanceForVnode(e,activeInstance,n,r)).$mount(t?e.elm:void 0,t);else if(e.data.keepAlive){var i=e;componentVNodeHooks.prepatch(i,i)}},prepatch:function(e,t){var n=t.componentOptions;updateChildComponent(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t=e.context,n=e.componentInstance;n._isMounted||(n._isMounted=!0,callHook(n,"mounted")),e.data.keepAlive&&(t._isMounted?queueActivatedComponent(n):activateChildComponent(n,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?deactivateChildComponent(t,!0):t.$destroy())}},hooksToMerge=Object.keys(componentVNodeHooks);function createComponent(e,t,n,r,i){if(!isUndef(e)){var o=n.$options._base;if(isObject(e)&&(e=o.extend(e)),"function"==typeof e){var a;if(isUndef(e.cid)&&void 0===(e=resolveAsyncComponent(a=e,o,n)))return createAsyncPlaceholder(a,t,n,r,i);t=t||{},resolveConstructorOptions(e),isDef(t.model)&&transformModel(e.options,t);var s=extractPropsFromVNodeData(t,e,i);if(isTrue(e.options.functional))return createFunctionalComponent(e,s,t,n,r);var c=t.on;if(t.on=t.nativeOn,isTrue(e.options.abstract)){var l=t.slot;t={},l&&(t.slot=l)}mergeHooks(t);var d=e.options.name||i;return new VNode("vue-component-"+e.cid+(d?"-"+d:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:s,listeners:c,tag:i,children:r},a)}}}function createComponentInstanceForVnode(e,t,n,r){var i={_isComponent:!0,parent:t,_parentVnode:e,_parentElm:n||null,_refElm:r||null},o=e.data.inlineTemplate;return isDef(o)&&(i.render=o.render,i.staticRenderFns=o.staticRenderFns),new e.componentOptions.Ctor(i)}function mergeHooks(e){e.hook||(e.hook={});for(var t=0;t<hooksToMerge.length;t++){var n=hooksToMerge[t],r=e.hook[n],i=componentVNodeHooks[n];e.hook[n]=r?mergeHook$1(i,r):i}}function mergeHook$1(e,t){return function(n,r,i,o){e(n,r,i,o),t(n,r,i,o)}}function transformModel(e,t){var n=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.props||(t.props={}))[n]=t.model.value;var i=t.on||(t.on={});isDef(i[r])?i[r]=[t.model.callback].concat(i[r]):i[r]=t.model.callback}var SIMPLE_NORMALIZE=1,ALWAYS_NORMALIZE=2;function createElement(e,t,n,r,i,o){return(Array.isArray(n)||isPrimitive(n))&&(i=r,r=n,n=void 0),isTrue(o)&&(i=ALWAYS_NORMALIZE),_createElement(e,t,n,r,i)}function _createElement(e,t,n,r,i){if(isDef(n)&&isDef(n.__ob__))return createEmptyVNode();if(isDef(n)&&isDef(n.is)&&(t=n.is),!t)return createEmptyVNode();var o,a,s;(Array.isArray(r)&&"function"==typeof r[0]&&((n=n||{}).scopedSlots={default:r[0]},r.length=0),i===ALWAYS_NORMALIZE?r=normalizeChildren(r):i===SIMPLE_NORMALIZE&&(r=simpleNormalizeChildren(r)),"string"==typeof t)?(a=e.$vnode&&e.$vnode.ns||config.getTagNamespace(t),o=config.isReservedTag(t)?new VNode(config.parsePlatformTagName(t),n,r,void 0,void 0,e):isDef(s=resolveAsset(e.$options,"components",t))?createComponent(s,n,e,r,t):new VNode(t,n,r,void 0,void 0,e)):o=createComponent(t,n,e,r);return isDef(o)?(a&&applyNS(o,a),o):createEmptyVNode()}function applyNS(e,t,n){if(e.ns=t,"foreignObject"===e.tag&&(t=void 0,n=!0),isDef(e.children))for(var r=0,i=e.children.length;r<i;r++){var o=e.children[r];isDef(o.tag)&&(isUndef(o.ns)||isTrue(n))&&applyNS(o,t,n)}}function initRender(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,r=n&&n.context;e.$slots=resolveSlots(t._renderChildren,r),e.$scopedSlots=emptyObject,e._c=function(t,n,r,i){return createElement(e,t,n,r,i,!1)},e.$createElement=function(t,n,r,i){return createElement(e,t,n,r,i,!0)};var i=n&&n.data;defineReactive(e,"$attrs",i&&i.attrs||emptyObject,null,!0),defineReactive(e,"$listeners",t._parentListeners||emptyObject,null,!0)}function renderMixin(e){installRenderHelpers(e.prototype),e.prototype.$nextTick=function(e){return nextTick(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,r=n.render,i=n._parentVnode;if(t._isMounted)for(var o in t.$slots){var a=t.$slots[o];(a._rendered||a[0]&&a[0].elm)&&(t.$slots[o]=cloneVNodes(a,!0))}t.$scopedSlots=i&&i.data.scopedSlots||emptyObject,t.$vnode=i;try{e=r.call(t._renderProxy,t.$createElement)}catch(n){handleError(n,t,"render"),e=t._vnode}return e instanceof VNode||(e=createEmptyVNode()),e.parent=i,e}}var uid=0;function initMixin(e){e.prototype._init=function(e){var t=this;t._uid=uid++,t._isVue=!0,e&&e._isComponent?initInternalComponent(t,e):t.$options=mergeOptions(resolveConstructorOptions(t.constructor),e||{},t),t._renderProxy=t,t._self=t,initLifecycle(t),initEvents(t),initRender(t),callHook(t,"beforeCreate"),initInjections(t),initState(t),initProvide(t),callHook(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}function initInternalComponent(e,t){var n=e.$options=Object.create(e.constructor.options),r=t._parentVnode;n.parent=t.parent,n._parentVnode=r,n._parentElm=t._parentElm,n._refElm=t._refElm;var i=r.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}function resolveConstructorOptions(e){var t=e.options;if(e.super){var n=resolveConstructorOptions(e.super);if(n!==e.superOptions){e.superOptions=n;var r=resolveModifiedOptions(e);r&&extend(e.extendOptions,r),(t=e.options=mergeOptions(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function resolveModifiedOptions(e){var t,n=e.options,r=e.extendOptions,i=e.sealedOptions;for(var o in n)n[o]!==i[o]&&(t||(t={}),t[o]=dedupe(n[o],r[o],i[o]));return t}function dedupe(e,t,n){if(Array.isArray(e)){var r=[];n=Array.isArray(n)?n:[n],t=Array.isArray(t)?t:[t];for(var i=0;i<e.length;i++)(t.indexOf(e[i])>=0||n.indexOf(e[i])<0)&&r.push(e[i]);return r}return e}function Vue$3(e){this._init(e)}function initUse(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=toArray(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}function initMixin$1(e){e.mixin=function(e){return this.options=mergeOptions(this.options,e),this}}function initExtend(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,i=e._Ctor||(e._Ctor={});if(i[r])return i[r];var o=e.name||n.options.name;var a=function(e){this._init(e)};return(a.prototype=Object.create(n.prototype)).constructor=a,a.cid=t++,a.options=mergeOptions(n.options,e),a.super=n,a.options.props&&initProps$1(a),a.options.computed&&initComputed$1(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,ASSET_TYPES.forEach(function(e){a[e]=n[e]}),o&&(a.options.components[o]=a),a.superOptions=n.options,a.extendOptions=e,a.sealedOptions=extend({},a.options),i[r]=a,a}}function initProps$1(e){var t=e.options.props;for(var n in t)proxy(e.prototype,"_props",n)}function initComputed$1(e){var t=e.options.computed;for(var n in t)defineComputed(e.prototype,n,t[n])}function initAssetRegisters(e){ASSET_TYPES.forEach(function(t){e[t]=function(e,n){return n?("component"===t&&isPlainObject(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}})}function getComponentName(e){return e&&(e.Ctor.options.name||e.tag)}function matches(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!isRegExp(e)&&e.test(t)}function pruneCache(e,t){var n=e.cache,r=e.keys,i=e._vnode;for(var o in n){var a=n[o];if(a){var s=getComponentName(a.componentOptions);s&&!t(s)&&pruneCacheEntry(n,o,r,i)}}}function pruneCacheEntry(e,t,n,r){var i=e[t];!i||r&&i.tag===r.tag||i.componentInstance.$destroy(),e[t]=null,remove(n,t)}initMixin(Vue$3),stateMixin(Vue$3),eventsMixin(Vue$3),lifecycleMixin(Vue$3),renderMixin(Vue$3);var patternTypes=[String,RegExp,Array],KeepAlive={name:"keep-alive",abstract:!0,props:{include:patternTypes,exclude:patternTypes,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)pruneCacheEntry(this.cache,e,this.keys)},watch:{include:function(e){pruneCache(this,function(t){return matches(e,t)})},exclude:function(e){pruneCache(this,function(t){return!matches(e,t)})}},render:function(){var e=this.$slots.default,t=getFirstComponentChild(e),n=t&&t.componentOptions;if(n){var r=getComponentName(n),i=this.include,o=this.exclude;if(i&&(!r||!matches(i,r))||o&&r&&matches(o,r))return t;var a=this.cache,s=this.keys,c=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;a[c]?(t.componentInstance=a[c].componentInstance,remove(s,c),s.push(c)):(a[c]=t,s.push(c),this.max&&s.length>parseInt(this.max)&&pruneCacheEntry(a,s[0],s,this._vnode)),t.data.keepAlive=!0}return t||e&&e[0]}},builtInComponents={KeepAlive:KeepAlive};function initGlobalAPI(e){var t={get:function(){return config}};Object.defineProperty(e,"config",t),e.util={warn:warn,extend:extend,mergeOptions:mergeOptions,defineReactive:defineReactive},e.set=set,e.delete=del,e.nextTick=nextTick,e.options=Object.create(null),ASSET_TYPES.forEach(function(t){e.options[t+"s"]=Object.create(null)}),e.options._base=e,extend(e.options.components,builtInComponents),initUse(e),initMixin$1(e),initExtend(e),initAssetRegisters(e)}initGlobalAPI(Vue$3),Object.defineProperty(Vue$3.prototype,"$isServer",{get:isServerRendering}),Object.defineProperty(Vue$3.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Vue$3.version="2.5.11";var isReservedAttr=makeMap("style,class"),acceptValue=makeMap("input,textarea,option,select,progress"),mustUseProp=function(e,t,n){return"value"===n&&acceptValue(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},isEnumeratedAttr=makeMap("contenteditable,draggable,spellcheck"),isBooleanAttr=makeMap("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),xlinkNS="http://www.w3.org/1999/xlink",isXlink=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},getXlinkProp=function(e){return isXlink(e)?e.slice(6,e.length):""},isFalsyAttrValue=function(e){return null==e||!1===e};function genClassForVnode(e){for(var t=e.data,n=e,r=e;isDef(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=mergeClassData(r.data,t));for(;isDef(n=n.parent);)n&&n.data&&(t=mergeClassData(t,n.data));return renderClass(t.staticClass,t.class)}function mergeClassData(e,t){return{staticClass:concat(e.staticClass,t.staticClass),class:isDef(e.class)?[e.class,t.class]:t.class}}function renderClass(e,t){return isDef(e)||isDef(t)?concat(e,stringifyClass(t)):""}function concat(e,t){return e?t?e+" "+t:e:t||""}function stringifyClass(e){return Array.isArray(e)?stringifyArray(e):isObject(e)?stringifyObject(e):"string"==typeof e?e:""}function stringifyArray(e){for(var t,n="",r=0,i=e.length;r<i;r++)isDef(t=stringifyClass(e[r]))&&""!==t&&(n&&(n+=" "),n+=t);return n}function stringifyObject(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}var namespaceMap={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},isHTMLTag=makeMap("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),isSVG=makeMap("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),isReservedTag=function(e){return isHTMLTag(e)||isSVG(e)};function getTagNamespace(e){return isSVG(e)?"svg":"math"===e?"math":void 0}var unknownElementCache=Object.create(null);function isUnknownElement(e){if(!inBrowser)return!0;if(isReservedTag(e))return!1;if(e=e.toLowerCase(),null!=unknownElementCache[e])return unknownElementCache[e];var t=document.createElement(e);return e.indexOf("-")>-1?unknownElementCache[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:unknownElementCache[e]=/HTMLUnknownElement/.test(t.toString())}var isTextInputType=makeMap("text,number,password,search,email,tel,url");function query(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}function createElement$1(e,t){var n=document.createElement(e);return"select"!==e?n:(t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n)}function createElementNS(e,t){return document.createElementNS(namespaceMap[e],t)}function createTextNode(e){return document.createTextNode(e)}function createComment(e){return document.createComment(e)}function insertBefore(e,t,n){e.insertBefore(t,n)}function removeChild(e,t){e.removeChild(t)}function appendChild(e,t){e.appendChild(t)}function parentNode(e){return e.parentNode}function nextSibling(e){return e.nextSibling}function tagName(e){return e.tagName}function setTextContent(e,t){e.textContent=t}function setAttribute(e,t,n){e.setAttribute(t,n)}var nodeOps=Object.freeze({createElement:createElement$1,createElementNS:createElementNS,createTextNode:createTextNode,createComment:createComment,insertBefore:insertBefore,removeChild:removeChild,appendChild:appendChild,parentNode:parentNode,nextSibling:nextSibling,tagName:tagName,setTextContent:setTextContent,setAttribute:setAttribute}),ref={create:function(e,t){registerRef(t)},update:function(e,t){e.data.ref!==t.data.ref&&(registerRef(e,!0),registerRef(t))},destroy:function(e){registerRef(e,!0)}};function registerRef(e,t){var n=e.data.ref;if(n){var r=e.context,i=e.componentInstance||e.elm,o=r.$refs;t?Array.isArray(o[n])?remove(o[n],i):o[n]===i&&(o[n]=void 0):e.data.refInFor?Array.isArray(o[n])?o[n].indexOf(i)<0&&o[n].push(i):o[n]=[i]:o[n]=i}}var emptyNode=new VNode("",{},[]),hooks=["create","activate","update","remove","destroy"];function sameVnode(e,t){return e.key===t.key&&(e.tag===t.tag&&e.isComment===t.isComment&&isDef(e.data)===isDef(t.data)&&sameInputType(e,t)||isTrue(e.isAsyncPlaceholder)&&e.asyncFactory===t.asyncFactory&&isUndef(t.asyncFactory.error))}function sameInputType(e,t){if("input"!==e.tag)return!0;var n,r=isDef(n=e.data)&&isDef(n=n.attrs)&&n.type,i=isDef(n=t.data)&&isDef(n=n.attrs)&&n.type;return r===i||isTextInputType(r)&&isTextInputType(i)}function createKeyToOldIdx(e,t,n){var r,i,o={};for(r=t;r<=n;++r)isDef(i=e[r].key)&&(o[i]=r);return o}function createPatchFunction(e){var t,n,r={},i=e.modules,o=e.nodeOps;for(t=0;t<hooks.length;++t)for(r[hooks[t]]=[],n=0;n<i.length;++n)isDef(i[n][hooks[t]])&&r[hooks[t]].push(i[n][hooks[t]]);function a(e){var t=o.parentNode(e);isDef(t)&&o.removeChild(t,e)}function s(e,t,n,i,a){if(e.isRootInsert=!a,!function(e,t,n,i){var o=e.data;if(isDef(o)){var a=isDef(e.componentInstance)&&o.keepAlive;if(isDef(o=o.hook)&&isDef(o=o.init)&&o(e,!1,n,i),isDef(e.componentInstance))return c(e,t),isTrue(a)&&function(e,t,n,i){var o,a=e;for(;a.componentInstance;)if(a=a.componentInstance._vnode,isDef(o=a.data)&&isDef(o=o.transition)){for(o=0;o<r.activate.length;++o)r.activate[o](emptyNode,a);t.push(a);break}l(n,e.elm,i)}(e,t,n,i),!0}}(e,t,n,i)){var s=e.data,u=e.children,v=e.tag;isDef(v)?(e.elm=e.ns?o.createElementNS(e.ns,v):o.createElement(v,e),p(e),d(e,u,t),isDef(s)&&f(e,t),l(n,e.elm,i)):isTrue(e.isComment)?(e.elm=o.createComment(e.text),l(n,e.elm,i)):(e.elm=o.createTextNode(e.text),l(n,e.elm,i))}}function c(e,t){isDef(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,u(e)?(f(e,t),p(e)):(registerRef(e),t.push(e))}function l(e,t,n){isDef(e)&&(isDef(n)?n.parentNode===e&&o.insertBefore(e,t,n):o.appendChild(e,t))}function d(e,t,n){if(Array.isArray(t)){0;for(var r=0;r<t.length;++r)s(t[r],n,e.elm,null,!0)}else isPrimitive(e.text)&&o.appendChild(e.elm,o.createTextNode(e.text))}function u(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return isDef(e.tag)}function f(e,n){for(var i=0;i<r.create.length;++i)r.create[i](emptyNode,e);isDef(t=e.data.hook)&&(isDef(t.create)&&t.create(emptyNode,e),isDef(t.insert)&&n.push(e))}function p(e){var t;if(isDef(t=e.fnScopeId))o.setAttribute(e.elm,t,"");else for(var n=e;n;)isDef(t=n.context)&&isDef(t=t.$options._scopeId)&&o.setAttribute(e.elm,t,""),n=n.parent;isDef(t=activeInstance)&&t!==e.context&&t!==e.fnContext&&isDef(t=t.$options._scopeId)&&o.setAttribute(e.elm,t,"")}function v(e,t,n,r,i,o){for(;r<=i;++r)s(n[r],o,e,t)}function h(e){var t,n,i=e.data;if(isDef(i))for(isDef(t=i.hook)&&isDef(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(isDef(t=e.children))for(n=0;n<e.children.length;++n)h(e.children[n])}function m(e,t,n,r){for(;n<=r;++n){var i=t[n];isDef(i)&&(isDef(i.tag)?(y(i),h(i)):a(i.elm))}}function y(e,t){if(isDef(t)||isDef(e.data)){var n,i=r.remove.length+1;for(isDef(t)?t.listeners+=i:t=function(e,t){function n(){0==--n.listeners&&a(e)}return n.listeners=t,n}(e.elm,i),isDef(n=e.componentInstance)&&isDef(n=n._vnode)&&isDef(n.data)&&y(n,t),n=0;n<r.remove.length;++n)r.remove[n](e,t);isDef(n=e.data.hook)&&isDef(n=n.remove)?n(e,t):t()}else a(e.elm)}function g(e,t,n,r){for(var i=n;i<r;i++){var o=t[i];if(isDef(o)&&sameVnode(e,o))return i}}function _(e,t,n,i){if(e!==t){var a=t.elm=e.elm;if(isTrue(e.isAsyncPlaceholder))isDef(t.asyncFactory.resolved)?A(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(isTrue(t.isStatic)&&isTrue(e.isStatic)&&t.key===e.key&&(isTrue(t.isCloned)||isTrue(t.isOnce)))t.componentInstance=e.componentInstance;else{var c,l=t.data;isDef(l)&&isDef(c=l.hook)&&isDef(c=c.prepatch)&&c(e,t);var d=e.children,f=t.children;if(isDef(l)&&u(t)){for(c=0;c<r.update.length;++c)r.update[c](e,t);isDef(c=l.hook)&&isDef(c=c.update)&&c(e,t)}isUndef(t.text)?isDef(d)&&isDef(f)?d!==f&&function(e,t,n,r,i){var a,c,l,d=0,u=0,f=t.length-1,p=t[0],h=t[f],y=n.length-1,b=n[0],C=n[y],A=!i;for(;d<=f&&u<=y;)isUndef(p)?p=t[++d]:isUndef(h)?h=t[--f]:sameVnode(p,b)?(_(p,b,r),p=t[++d],b=n[++u]):sameVnode(h,C)?(_(h,C,r),h=t[--f],C=n[--y]):sameVnode(p,C)?(_(p,C,r),A&&o.insertBefore(e,p.elm,o.nextSibling(h.elm)),p=t[++d],C=n[--y]):sameVnode(h,b)?(_(h,b,r),A&&o.insertBefore(e,h.elm,p.elm),h=t[--f],b=n[++u]):(isUndef(a)&&(a=createKeyToOldIdx(t,d,f)),isUndef(c=isDef(b.key)?a[b.key]:g(b,t,d,f))?s(b,r,e,p.elm):sameVnode(l=t[c],b)?(_(l,b,r),t[c]=void 0,A&&o.insertBefore(e,l.elm,p.elm)):s(b,r,e,p.elm),b=n[++u]);d>f?v(e,isUndef(n[y+1])?null:n[y+1].elm,n,u,y,r):u>y&&m(0,t,d,f)}(a,d,f,n,i):isDef(f)?(isDef(e.text)&&o.setTextContent(a,""),v(a,null,f,0,f.length-1,n)):isDef(d)?m(0,d,0,d.length-1):isDef(e.text)&&o.setTextContent(a,""):e.text!==t.text&&o.setTextContent(a,t.text),isDef(l)&&isDef(c=l.hook)&&isDef(c=c.postpatch)&&c(e,t)}}}function b(e,t,n){if(isTrue(n)&&isDef(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var C=makeMap("attrs,class,staticClass,staticStyle,key");function A(e,t,n,r){var i,o=t.tag,a=t.data,s=t.children;if(r=r||a&&a.pre,t.elm=e,isTrue(t.isComment)&&isDef(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(isDef(a)&&(isDef(i=a.hook)&&isDef(i=i.init)&&i(t,!0),isDef(i=t.componentInstance)))return c(t,n),!0;if(isDef(o)){if(isDef(s))if(e.hasChildNodes())if(isDef(i=a)&&isDef(i=i.domProps)&&isDef(i=i.innerHTML)){if(i!==e.innerHTML)return!1}else{for(var l=!0,u=e.firstChild,p=0;p<s.length;p++){if(!u||!A(u,s[p],n,r)){l=!1;break}u=u.nextSibling}if(!l||u)return!1}else d(t,s,n);if(isDef(a)){var v=!1;for(var h in a)if(!C(h)){v=!0,f(t,n);break}!v&&a.class&&traverse(a.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,i,a,c){if(!isUndef(t)){var l,d=!1,f=[];if(isUndef(e))d=!0,s(t,f,a,c);else{var p=isDef(e.nodeType);if(!p&&sameVnode(e,t))_(e,t,f,i);else{if(p){if(1===e.nodeType&&e.hasAttribute(SSR_ATTR)&&(e.removeAttribute(SSR_ATTR),n=!0),isTrue(n)&&A(e,t,f))return b(t,f,!0),e;l=e,e=new VNode(o.tagName(l).toLowerCase(),{},[],void 0,l)}var v=e.elm,y=o.parentNode(v);if(s(t,f,v._leaveCb?null:y,o.nextSibling(v)),isDef(t.parent))for(var g=t.parent,C=u(t);g;){for(var O=0;O<r.destroy.length;++O)r.destroy[O](g);if(g.elm=t.elm,C){for(var T=0;T<r.create.length;++T)r.create[T](emptyNode,g);var D=g.data.hook.insert;if(D.merged)for(var k=1;k<D.fns.length;k++)D.fns[k]()}else registerRef(g);g=g.parent}isDef(y)?m(0,[e],0,0):isDef(e.tag)&&h(e)}}return b(t,f,d),t.elm}isDef(e)&&h(e)}}var directives={create:updateDirectives,update:updateDirectives,destroy:function(e){updateDirectives(e,emptyNode)}};function updateDirectives(e,t){(e.data.directives||t.data.directives)&&_update(e,t)}function _update(e,t){var n,r,i,o=e===emptyNode,a=t===emptyNode,s=normalizeDirectives$1(e.data.directives,e.context),c=normalizeDirectives$1(t.data.directives,t.context),l=[],d=[];for(n in c)r=s[n],i=c[n],r?(i.oldValue=r.value,callHook$1(i,"update",t,e),i.def&&i.def.componentUpdated&&d.push(i)):(callHook$1(i,"bind",t,e),i.def&&i.def.inserted&&l.push(i));if(l.length){var u=function(){for(var n=0;n<l.length;n++)callHook$1(l[n],"inserted",t,e)};o?mergeVNodeHook(t,"insert",u):u()}if(d.length&&mergeVNodeHook(t,"postpatch",function(){for(var n=0;n<d.length;n++)callHook$1(d[n],"componentUpdated",t,e)}),!o)for(n in s)c[n]||callHook$1(s[n],"unbind",e,e,a)}var emptyModifiers=Object.create(null);function normalizeDirectives$1(e,t){var n,r,i=Object.create(null);if(!e)return i;for(n=0;n<e.length;n++)(r=e[n]).modifiers||(r.modifiers=emptyModifiers),i[getRawDirName(r)]=r,r.def=resolveAsset(t.$options,"directives",r.name,!0);return i}function getRawDirName(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function callHook$1(e,t,n,r,i){var o=e.def&&e.def[t];if(o)try{o(n.elm,e,n,r,i)}catch(r){handleError(r,n.context,"directive "+e.name+" "+t+" hook")}}var baseModules=[ref,directives];function updateAttrs(e,t){var n=t.componentOptions;if(!(isDef(n)&&!1===n.Ctor.options.inheritAttrs||isUndef(e.data.attrs)&&isUndef(t.data.attrs))){var r,i,o=t.elm,a=e.data.attrs||{},s=t.data.attrs||{};for(r in isDef(s.__ob__)&&(s=t.data.attrs=extend({},s)),s)i=s[r],a[r]!==i&&setAttr(o,r,i);for(r in(isIE||isEdge)&&s.value!==a.value&&setAttr(o,"value",s.value),a)isUndef(s[r])&&(isXlink(r)?o.removeAttributeNS(xlinkNS,getXlinkProp(r)):isEnumeratedAttr(r)||o.removeAttribute(r))}}function setAttr(e,t,n){if(isBooleanAttr(t))isFalsyAttrValue(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n));else if(isEnumeratedAttr(t))e.setAttribute(t,isFalsyAttrValue(n)||"false"===n?"false":"true");else if(isXlink(t))isFalsyAttrValue(n)?e.removeAttributeNS(xlinkNS,getXlinkProp(t)):e.setAttributeNS(xlinkNS,t,n);else if(isFalsyAttrValue(n))e.removeAttribute(t);else{if(isIE&&!isIE9&&"TEXTAREA"===e.tagName&&"placeholder"===t&&!e.__ieph){var r=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(t,n)}}var attrs={create:updateAttrs,update:updateAttrs};function updateClass(e,t){var n=t.elm,r=t.data,i=e.data;if(!(isUndef(r.staticClass)&&isUndef(r.class)&&(isUndef(i)||isUndef(i.staticClass)&&isUndef(i.class)))){var o=genClassForVnode(t),a=n._transitionClasses;isDef(a)&&(o=concat(o,stringifyClass(a))),o!==n._prevClass&&(n.setAttribute("class",o),n._prevClass=o)}}var target$1,klass={create:updateClass,update:updateClass},RANGE_TOKEN="__r",CHECKBOX_RADIO_TOKEN="__c";function normalizeEvents(e){if(isDef(e[RANGE_TOKEN])){var t=isIE?"change":"input";e[t]=[].concat(e[RANGE_TOKEN],e[t]||[]),delete e[RANGE_TOKEN]}isDef(e[CHECKBOX_RADIO_TOKEN])&&(e.change=[].concat(e[CHECKBOX_RADIO_TOKEN],e.change||[]),delete e[CHECKBOX_RADIO_TOKEN])}function createOnceHandler(e,t,n){var r=target$1;return function i(){null!==e.apply(null,arguments)&&remove$2(t,i,n,r)}}function add$1(e,t,n,r,i){t=withMacroTask(t),n&&(t=createOnceHandler(t,e,r)),target$1.addEventListener(e,t,supportsPassive?{capture:r,passive:i}:r)}function remove$2(e,t,n,r){(r||target$1).removeEventListener(e,t._withTask||t,n)}function updateDOMListeners(e,t){if(!isUndef(e.data.on)||!isUndef(t.data.on)){var n=t.data.on||{},r=e.data.on||{};target$1=t.elm,normalizeEvents(n),updateListeners(n,r,add$1,remove$2,t.context),target$1=void 0}}var events={create:updateDOMListeners,update:updateDOMListeners};function updateDOMProps(e,t){if(!isUndef(e.data.domProps)||!isUndef(t.data.domProps)){var n,r,i=t.elm,o=e.data.domProps||{},a=t.data.domProps||{};for(n in isDef(a.__ob__)&&(a=t.data.domProps=extend({},a)),o)isUndef(a[n])&&(i[n]="");for(n in a){if(r=a[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),r===o[n])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===n){i._value=r;var s=isUndef(r)?"":String(r);shouldUpdateValue(i,s)&&(i.value=s)}else i[n]=r}}}function shouldUpdateValue(e,t){return!e.composing&&("OPTION"===e.tagName||isNotInFocusAndDirty(e,t)||isDirtyWithModifiers(e,t))}function isNotInFocusAndDirty(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}function isDirtyWithModifiers(e,t){var n=e.value,r=e._vModifiers;if(isDef(r)){if(r.lazy)return!1;if(r.number)return toNumber(n)!==toNumber(t);if(r.trim)return n.trim()!==t.trim()}return n!==t}var domProps={create:updateDOMProps,update:updateDOMProps},parseStyleText=cached(function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach(function(e){if(e){var r=e.split(n);r.length>1&&(t[r[0].trim()]=r[1].trim())}}),t});function normalizeStyleData(e){var t=normalizeStyleBinding(e.style);return e.staticStyle?extend(e.staticStyle,t):t}function normalizeStyleBinding(e){return Array.isArray(e)?toObject(e):"string"==typeof e?parseStyleText(e):e}function getStyle(e,t){var n,r={};if(t)for(var i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=normalizeStyleData(i.data))&&extend(r,n);(n=normalizeStyleData(e.data))&&extend(r,n);for(var o=e;o=o.parent;)o.data&&(n=normalizeStyleData(o.data))&&extend(r,n);return r}var emptyStyle,cssVarRE=/^--/,importantRE=/\s*!important$/,setProp=function(e,t,n){if(cssVarRE.test(t))e.style.setProperty(t,n);else if(importantRE.test(n))e.style.setProperty(t,n.replace(importantRE,""),"important");else{var r=normalize(t);if(Array.isArray(n))for(var i=0,o=n.length;i<o;i++)e.style[r]=n[i];else e.style[r]=n}},vendorNames=["Webkit","Moz","ms"],normalize=cached(function(e){if(emptyStyle=emptyStyle||document.createElement("div").style,"filter"!==(e=camelize(e))&&e in emptyStyle)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<vendorNames.length;n++){var r=vendorNames[n]+t;if(r in emptyStyle)return r}});function updateStyle(e,t){var n=t.data,r=e.data;if(!(isUndef(n.staticStyle)&&isUndef(n.style)&&isUndef(r.staticStyle)&&isUndef(r.style))){var i,o,a=t.elm,s=r.staticStyle,c=r.normalizedStyle||r.style||{},l=s||c,d=normalizeStyleBinding(t.data.style)||{};t.data.normalizedStyle=isDef(d.__ob__)?extend({},d):d;var u=getStyle(t,!0);for(o in l)isUndef(u[o])&&setProp(a,o,"");for(o in u)(i=u[o])!==l[o]&&setProp(a,o,null==i?"":i)}}var style={create:updateStyle,update:updateStyle};function addClass(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(/\s+/).forEach(function(t){return e.classList.add(t)}):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function removeClass(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(/\s+/).forEach(function(t){return e.classList.remove(t)}):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",r=" "+t+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function resolveTransition(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&extend(t,autoCssTransition(e.name||"v")),extend(t,e),t}return"string"==typeof e?autoCssTransition(e):void 0}}var autoCssTransition=cached(function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}}),hasTransition=inBrowser&&!isIE9,TRANSITION="transition",ANIMATION="animation",transitionProp="transition",transitionEndEvent="transitionend",animationProp="animation",animationEndEvent="animationend";hasTransition&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(transitionProp="WebkitTransition",transitionEndEvent="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(animationProp="WebkitAnimation",animationEndEvent="webkitAnimationEnd"));var raf=inBrowser?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function nextFrame(e){raf(function(){raf(e)})}function addTransitionClass(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),addClass(e,t))}function removeTransitionClass(e,t){e._transitionClasses&&remove(e._transitionClasses,t),removeClass(e,t)}function whenTransitionEnds(e,t,n){var r=getTransitionInfo(e,t),i=r.type,o=r.timeout,a=r.propCount;if(!i)return n();var s=i===TRANSITION?transitionEndEvent:animationEndEvent,c=0,l=function(){e.removeEventListener(s,d),n()},d=function(t){t.target===e&&++c>=a&&l()};setTimeout(function(){c<a&&l()},o+1),e.addEventListener(s,d)}var transformRE=/\b(transform|all)(,|$)/;function getTransitionInfo(e,t){var n,r=window.getComputedStyle(e),i=r[transitionProp+"Delay"].split(", "),o=r[transitionProp+"Duration"].split(", "),a=getTimeout(i,o),s=r[animationProp+"Delay"].split(", "),c=r[animationProp+"Duration"].split(", "),l=getTimeout(s,c),d=0,u=0;return t===TRANSITION?a>0&&(n=TRANSITION,d=a,u=o.length):t===ANIMATION?l>0&&(n=ANIMATION,d=l,u=c.length):u=(n=(d=Math.max(a,l))>0?a>l?TRANSITION:ANIMATION:null)?n===TRANSITION?o.length:c.length:0,{type:n,timeout:d,propCount:u,hasTransform:n===TRANSITION&&transformRE.test(r[transitionProp+"Property"])}}function getTimeout(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map(function(t,n){return toMs(t)+toMs(e[n])}))}function toMs(e){return 1e3*Number(e.slice(0,-1))}function enter(e,t){var n=e.elm;isDef(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=resolveTransition(e.data.transition);if(!isUndef(r)&&!isDef(n._enterCb)&&1===n.nodeType){for(var i=r.css,o=r.type,a=r.enterClass,s=r.enterToClass,c=r.enterActiveClass,l=r.appearClass,d=r.appearToClass,u=r.appearActiveClass,f=r.beforeEnter,p=r.enter,v=r.afterEnter,h=r.enterCancelled,m=r.beforeAppear,y=r.appear,g=r.afterAppear,_=r.appearCancelled,b=r.duration,C=activeInstance,A=activeInstance.$vnode;A&&A.parent;)C=(A=A.parent).context;var O=!C._isMounted||!e.isRootInsert;if(!O||y||""===y){var T=O&&l?l:a,D=O&&u?u:c,k=O&&d?d:s,x=O&&m||f,E=O&&"function"==typeof y?y:p,S=O&&g||v,w=O&&_||h,$=toNumber(isObject(b)?b.enter:b);0;var N=!1!==i&&!isIE9,I=getHookArgumentsLength(E),P=n._enterCb=once(function(){N&&(removeTransitionClass(n,k),removeTransitionClass(n,D)),P.cancelled?(N&&removeTransitionClass(n,T),w&&w(n)):S&&S(n),n._enterCb=null});e.data.show||mergeVNodeHook(e,"insert",function(){var t=n.parentNode,r=t&&t._pending&&t._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),E&&E(n,P)}),x&&x(n),N&&(addTransitionClass(n,T),addTransitionClass(n,D),nextFrame(function(){addTransitionClass(n,k),removeTransitionClass(n,T),P.cancelled||I||(isValidDuration($)?setTimeout(P,$):whenTransitionEnds(n,o,P))})),e.data.show&&(t&&t(),E&&E(n,P)),N||I||P()}}}function leave(e,t){var n=e.elm;isDef(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=resolveTransition(e.data.transition);if(isUndef(r)||1!==n.nodeType)return t();if(!isDef(n._leaveCb)){var i=r.css,o=r.type,a=r.leaveClass,s=r.leaveToClass,c=r.leaveActiveClass,l=r.beforeLeave,d=r.leave,u=r.afterLeave,f=r.leaveCancelled,p=r.delayLeave,v=r.duration,h=!1!==i&&!isIE9,m=getHookArgumentsLength(d),y=toNumber(isObject(v)?v.leave:v);0;var g=n._leaveCb=once(function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),h&&(removeTransitionClass(n,s),removeTransitionClass(n,c)),g.cancelled?(h&&removeTransitionClass(n,a),f&&f(n)):(t(),u&&u(n)),n._leaveCb=null});p?p(_):_()}function _(){g.cancelled||(e.data.show||((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),l&&l(n),h&&(addTransitionClass(n,a),addTransitionClass(n,c),nextFrame(function(){addTransitionClass(n,s),removeTransitionClass(n,a),g.cancelled||m||(isValidDuration(y)?setTimeout(g,y):whenTransitionEnds(n,o,g))})),d&&d(n,g),h||m||g())}}function checkDuration(e,t,n){"number"!=typeof e?warn("<transition> explicit "+t+" duration is not a valid number - got "+JSON.stringify(e)+".",n.context):isNaN(e)&&warn("<transition> explicit "+t+" duration is NaN - the duration expression might be incorrect.",n.context)}function isValidDuration(e){return"number"==typeof e&&!isNaN(e)}function getHookArgumentsLength(e){if(isUndef(e))return!1;var t=e.fns;return isDef(t)?getHookArgumentsLength(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function _enter(e,t){!0!==t.data.show&&enter(t)}var transition=inBrowser?{create:_enter,activate:_enter,remove:function(e,t){!0!==e.data.show?leave(e,t):t()}}:{},platformModules=[attrs,klass,events,domProps,style,transition],modules=platformModules.concat(baseModules),patch=createPatchFunction({nodeOps:nodeOps,modules:modules});isIE9&&document.addEventListener("selectionchange",function(){var e=document.activeElement;e&&e.vmodel&&trigger(e,"input")});var directive={inserted:function(e,t,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?mergeVNodeHook(n,"postpatch",function(){directive.componentUpdated(e,t,n)}):setSelected(e,t,n.context),e._vOptions=[].map.call(e.options,getValue)):("textarea"===n.tag||isTextInputType(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("change",onCompositionEnd),isAndroid||(e.addEventListener("compositionstart",onCompositionStart),e.addEventListener("compositionend",onCompositionEnd)),isIE9&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){setSelected(e,t,n.context);var r=e._vOptions,i=e._vOptions=[].map.call(e.options,getValue);if(i.some(function(e,t){return!looseEqual(e,r[t])}))(e.multiple?t.value.some(function(e){return hasNoMatchingOption(e,i)}):t.value!==t.oldValue&&hasNoMatchingOption(t.value,i))&&trigger(e,"change")}}};function setSelected(e,t,n){actuallySetSelected(e,t,n),(isIE||isEdge)&&setTimeout(function(){actuallySetSelected(e,t,n)},0)}function actuallySetSelected(e,t,n){var r=t.value,i=e.multiple;if(!i||Array.isArray(r)){for(var o,a,s=0,c=e.options.length;s<c;s++)if(a=e.options[s],i)o=looseIndexOf(r,getValue(a))>-1,a.selected!==o&&(a.selected=o);else if(looseEqual(getValue(a),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));i||(e.selectedIndex=-1)}}function hasNoMatchingOption(e,t){return t.every(function(t){return!looseEqual(t,e)})}function getValue(e){return"_value"in e?e._value:e.value}function onCompositionStart(e){e.target.composing=!0}function onCompositionEnd(e){e.target.composing&&(e.target.composing=!1,trigger(e.target,"input"))}function trigger(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function locateNode(e){return!e.componentInstance||e.data&&e.data.transition?e:locateNode(e.componentInstance._vnode)}var show={bind:function(e,t,n){var r=t.value,i=(n=locateNode(n)).data&&n.data.transition,o=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&i?(n.data.show=!0,enter(n,function(){e.style.display=o})):e.style.display=r?o:"none"},update:function(e,t,n){var r=t.value;r!==t.oldValue&&((n=locateNode(n)).data&&n.data.transition?(n.data.show=!0,r?enter(n,function(){e.style.display=e.__vOriginalDisplay}):leave(n,function(){e.style.display="none"})):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,r,i){i||(e.style.display=e.__vOriginalDisplay)}},platformDirectives={model:directive,show:show},transitionProps={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function getRealChild(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?getRealChild(getFirstComponentChild(t.children)):e}function extractTransitionData(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var i=n._parentListeners;for(var o in i)t[camelize(o)]=i[o];return t}function placeholder(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}function hasParentTransition(e){for(;e=e.parent;)if(e.data.transition)return!0}function isSameChild(e,t){return t.key===e.key&&t.tag===e.tag}var Transition={name:"transition",props:transitionProps,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(function(e){return e.tag||isAsyncPlaceholder(e)})).length){0;var r=this.mode;0;var i=n[0];if(hasParentTransition(this.$vnode))return i;var o=getRealChild(i);if(!o)return i;if(this._leaving)return placeholder(e,i);var a="__transition-"+this._uid+"-";o.key=null==o.key?o.isComment?a+"comment":a+o.tag:isPrimitive(o.key)?0===String(o.key).indexOf(a)?o.key:a+o.key:o.key;var s=(o.data||(o.data={})).transition=extractTransitionData(this),c=this._vnode,l=getRealChild(c);if(o.data.directives&&o.data.directives.some(function(e){return"show"===e.name})&&(o.data.show=!0),l&&l.data&&!isSameChild(o,l)&&!isAsyncPlaceholder(l)&&(!l.componentInstance||!l.componentInstance._vnode.isComment)){var d=l.data.transition=extend({},s);if("out-in"===r)return this._leaving=!0,mergeVNodeHook(d,"afterLeave",function(){t._leaving=!1,t.$forceUpdate()}),placeholder(e,i);if("in-out"===r){if(isAsyncPlaceholder(o))return c;var u,f=function(){u()};mergeVNodeHook(s,"afterEnter",f),mergeVNodeHook(s,"enterCancelled",f),mergeVNodeHook(d,"delayLeave",function(e){u=e})}}return i}}},props=extend({tag:String,moveClass:String},transitionProps);delete props.mode;var TransitionGroup={props:props,render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],o=this.children=[],a=extractTransitionData(this),s=0;s<i.length;s++){var c=i[s];if(c.tag)if(null!=c.key&&0!==String(c.key).indexOf("__vlist"))o.push(c),n[c.key]=c,(c.data||(c.data={})).transition=a;else;}if(r){for(var l=[],d=[],u=0;u<r.length;u++){var f=r[u];f.data.transition=a,f.data.pos=f.elm.getBoundingClientRect(),n[f.key]?l.push(f):d.push(f)}this.kept=e(t,null,l),this.removed=d}return e(t,null,o)},beforeUpdate:function(){this.__patch__(this._vnode,this.kept,!1,!0),this._vnode=this.kept},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(callPendingCbs),e.forEach(recordPosition),e.forEach(applyTranslation),this._reflow=document.body.offsetHeight,e.forEach(function(e){if(e.data.moved){var n=e.elm,r=n.style;addTransitionClass(n,t),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(transitionEndEvent,n._moveCb=function e(r){r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(transitionEndEvent,e),n._moveCb=null,removeTransitionClass(n,t))})}}))},methods:{hasMove:function(e,t){if(!hasTransition)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach(function(e){removeClass(n,e)}),addClass(n,t),n.style.display="none",this.$el.appendChild(n);var r=getTransitionInfo(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}};function callPendingCbs(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function recordPosition(e){e.data.newPos=e.elm.getBoundingClientRect()}function applyTranslation(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,i=t.top-n.top;if(r||i){e.data.moved=!0;var o=e.elm.style;o.transform=o.WebkitTransform="translate("+r+"px,"+i+"px)",o.transitionDuration="0s"}}var platformComponents={Transition:Transition,TransitionGroup:TransitionGroup};Vue$3.config.mustUseProp=mustUseProp,Vue$3.config.isReservedTag=isReservedTag,Vue$3.config.isReservedAttr=isReservedAttr,Vue$3.config.getTagNamespace=getTagNamespace,Vue$3.config.isUnknownElement=isUnknownElement,extend(Vue$3.options.directives,platformDirectives),extend(Vue$3.options.components,platformComponents),Vue$3.prototype.__patch__=inBrowser?patch:noop,Vue$3.prototype.$mount=function(e,t){return mountComponent(this,e=e&&inBrowser?query(e):void 0,t)},Vue$3.nextTick(function(){config.devtools&&devtools&&devtools.emit("init",Vue$3)},0),module.exports=Vue$3;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],3:[function(require,module,exports){
var inserted=exports.cache={};exports.insert=function(e){if(!inserted[e]){inserted[e]=!0;var t=document.createElement("style");return t.setAttribute("type","text/css"),"textContent"in t?t.textContent=e:t.styleSheet.cssText=e,document.getElementsByTagName("head")[0].appendChild(t),t}};

},{}],4:[function(require,module,exports){
var __vueify_insert__=require("vueify/lib/insert-css"),__vueify_style__=__vueify_insert__.insert("\n\n");!function(){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={name:"Index",data:function(){return{}},computed:{},mounted:function(){for(var t=new TimelineMax({repeat:-1,delay:1,smoothChildTiming:!0,paused:!1,yoyo:!1}),e=new TimelineMax({repeat:0,delay:1,smoothChildTiming:!0,paused:!1,yoyo:!1}),i=0;i<3;i++){t.add(TweenMax.fromTo($(this.$refs["dish"+(i+1)]),1,{opacity:0},{opacity:1}),5.5*i),t.add(TweenMax.to($(this.$refs["dish"+(i+1)]),1,{opacity:0}),5*(i+1))}e.add(TweenMax.fromTo($(this.$refs.title),.6,{opacity:0,y:-50},{opacity:1,y:-0}),0),e.add(TweenMax.fromTo($(this.$refs.cover),.6,{opacity:0,y:-50},{opacity:1,y:-0}),"-=0.3"),e.add(TweenMax.fromTo($(this.$refs.keys),.6,{opacity:0,y:-50},{opacity:1,y:-0}),"-=0.3")},methods:{}}}(),module.exports.__esModule&&(module.exports=module.exports.default);var __vue__options__="function"==typeof module.exports?module.exports.options:module.exports;__vue__options__.render=function(){with(this)return _c("section",{staticClass:"index"},[_c("div",{staticClass:"index__hd"}),_c("div",{staticClass:"index__bd"},[_c("div",{staticClass:"index__content"},[_c("div",{staticClass:"l-container"},[_c("div",{staticClass:"l-vm"},[_c("div",{staticClass:"l-vm__content"},[_c("div",{ref:"title",staticClass:"index__title hide-text"},[_v("麵包大解密 安心飲食新指標")]),_c("div",{ref:"cover",staticClass:"index__cover"},[_c("div",{ref:"dish1",staticClass:"index__dish index__dish--1"}),_c("div",{ref:"dish2",staticClass:"index__dish index__dish--2"}),_c("div",{ref:"dish3",staticClass:"index__dish index__dish--3"})]),_c("div",{ref:"keys",staticClass:"index__keys clearfix"},[_m(0),_m(1),_m(2)])])])]),_m(3)])]),_c("div",{staticClass:"index__ft"},[_c("div",{ref:"note",staticClass:"index__note"}),_m(4)])])},__vue__options__.staticRenderFns=[function(){with(this)return _c("a",{staticClass:"index__keys__item index__keys__item--1",attrs:{href:"key.1.html"}},[_c("span",{staticClass:"hideText"},[_v("安心關鍵1 麵包保鮮")]),_c("span",{staticClass:"btn"},[_v("去看看"),_c("span",{staticClass:"icon"})])])},function(){with(this)return _c("a",{staticClass:"index__keys__item index__keys__item--2",attrs:{href:"key.2.html"}},[_c("span",{staticClass:"hideText"},[_v("安心關鍵2 一致的品質")]),_c("span",{staticClass:"btn"},[_v("去看看"),_c("span",{staticClass:"icon"})])])},function(){with(this)return _c("a",{staticClass:"index__keys__item index__keys__item--3",attrs:{href:"key.3.html"}},[_c("span",{staticClass:"hideText"},[_v("安心關鍵3 飲食安全")]),_c("span",{staticClass:"btn"},[_v("去看看"),_c("span",{staticClass:"icon"})])])},function(){with(this)return _c("a",{staticClass:"index__link-test gtm-event",attrs:{href:"https://goo.gl/dPeLZn","data-category":"bread-click","data-action":"floating-click","data-label":"大會考去試試"}},[_c("span",{staticClass:"btn gtm-event",attrs:{"data-category":"bread-click","data-action":"floating-click","data-label":"大會考去試試"}},[_v("去試試"),_c("span",{staticClass:"icon"})])])},function(){with(this)return _c("div",{staticClass:"l-container"},[_c("div",{staticClass:"index__bear"})])}],__vue__options__._scopeId="data-v-5",module.hot&&function(){var t=require("vue-hot-reload-api");t.install(require("vue"),!0),t.compatible&&(module.hot.accept(),module.hot.dispose(function(){__vueify_insert__.cache["\n\n"]=!1,document.head.removeChild(__vueify_style__)}),module.hot.data?t.reload("data-v-5",__vue__options__):t.createRecord("data-v-5",__vue__options__))}();

},{"vue":2,"vue-hot-reload-api":1,"vueify/lib/insert-css":3}],5:[function(require,module,exports){
var __vueify_insert__=require("vueify/lib/insert-css"),__vueify_style__=__vueify_insert__.insert("\n\n");!function(){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=i(require("./Key1.vue")),t=i(require("./Key2.vue")),o=i(require("./Key3.vue"));function i(e){return e&&e.__esModule?e:{default:e}}exports.default={name:"Key",components:{Key1:e.default,Key2:t.default,Key3:o.default},props:["currentKeyPage"],data:function(){return{currentTitle:"",currentContent:"",isShowPop:!1}},computed:{},mounted:function(){new ScrollMagic.Controller;var e=new TimelineMax({repeat:0,delay:1.2,smoothChildTiming:!0,paused:!0,yoyo:!1});e.add(TweenMax.fromTo($(".key__title"),.4,{y:-50,opacity:0},{y:0,opacity:1}),0),e.add(TweenMax.fromTo($(".key__flow__main"),.4,{y:-50,opacity:0},{y:0,opacity:1}),"-=0.1"),IsMobile||(e.add(TweenMax.fromTo($(".key__flow__bread--1"),.4,{y:-30,opacity:0},{y:0,opacity:1}),"-=0.1"),e.add(TweenMax.fromTo($(".key__flow__bread--2"),.4,{y:-30,opacity:0},{y:0,opacity:1}),"-=0.1"),e.add(TweenMax.fromTo($(".key__flow__bread--3"),.4,{y:-30,opacity:0},{y:0,opacity:1}),"-=0.1")),e.add(TweenMax.fromTo($(".key__anis"),.4,{y:-20,opacity:0},{y:0,opacity:1}),"+=0.6"),e.add(TweenMax.fromTo($(".key__item .ani-wrap"),.6,{y:-20,opacity:0},{y:0,opacity:1}),"-=0.1"),e.play()},methods:{showPop:function(e,t){var o=t+1,i=$(".key"+this.currentKeyPage+" .key__item.key__item--"+o),n=i.find(".title").text(),_=i.find(".content").text();this.currentTitle=n,this.currentContent=_,this.isShowPop=!0},closePop:function(e){e.preventDefault(),this.isShowPop=!1}}}}(),module.exports.__esModule&&(module.exports=module.exports.default);var __vue__options__="function"==typeof module.exports?module.exports.options:module.exports;__vue__options__.render=function(){with(this)return _c("div",[1==currentKeyPage?_c("key1",{attrs:{"is-show-pop":isShowPop,"current-title":currentTitle,"current-content":currentContent},on:{"\bshowpop":showPop,"\bclosepop":closePop}}):_e(),2==currentKeyPage?_c("key2",{attrs:{"is-show-pop":isShowPop,"current-title":currentTitle,"current-content":currentContent},on:{"\bshowpop":showPop,"\bclosepop":closePop}}):_e(),3==currentKeyPage?_c("key3",{attrs:{"is-show-pop":isShowPop,"current-title":currentTitle,"current-content":currentContent},on:{"\bshowpop":showPop,"\bclosepop":closePop}}):_e(),_c("transition",{attrs:{name:"fade","enter-active-class":"animated fadeIn active","leave-active-class":"animated fadeOut",tag:"div"}},[isShowPop?_c("div",{staticClass:"pop"},[_c("div",{staticClass:"l-container"},[_c("div",{staticClass:"pop__bd"},[_c("div",{staticClass:"pop__content"},[_c("div",{staticClass:"pop__title",domProps:{innerHTML:_s(currentTitle)}}),_c("div",{staticClass:"pop__text"},[_v(_s(currentContent))]),_c("div",{staticClass:"pop__ctrls"},[_c("div",{staticClass:"pop__btn",on:{click:function(e){closePop(e)}}},[_v("了解！")])])])])])]):_e()])],1)},__vue__options__.staticRenderFns=[],__vue__options__._scopeId="data-v-2",module.hot&&function(){var e=require("vue-hot-reload-api");e.install(require("vue"),!0),e.compatible&&(module.hot.accept(),module.hot.dispose(function(){__vueify_insert__.cache["\n\n"]=!1,document.head.removeChild(__vueify_style__)}),module.hot.data?e.reload("data-v-2",__vue__options__):e.createRecord("data-v-2",__vue__options__))}();

},{"./Key1.vue":6,"./Key2.vue":7,"./Key3.vue":8,"vue":2,"vue-hot-reload-api":1,"vueify/lib/insert-css":3}],6:[function(require,module,exports){
var __vueify_insert__=require("vueify/lib/insert-css"),__vueify_style__=__vueify_insert__.insert("\n\n");!function(){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={name:"Key1",components:{},props:["currentTitle","currentContent","isShowPop"],data:function(){return{}},computed:{},mounted:function(){},methods:{showPop:function(t,a){t.preventDefault(),this.$emit("\bshowpop",t,a)},closePop:function(t){t.preventDefault(),this.$emit("\bclosepop",t)}}}}(),module.exports.__esModule&&(module.exports=module.exports.default);var __vue__options__="function"==typeof module.exports?module.exports.options:module.exports;__vue__options__.render=function(){with(this)return _c("section",{staticClass:"key key1"},[_c("div",{staticClass:"key__hd"}),_c("div",{staticClass:"key__bd"},[_c("div",{staticClass:"l-container"},[_c("section",{staticClass:"key__content"},[_c("h1",{staticClass:"key__title"},[_v("安心關鍵 1 一張圖看懂 麵包保鮮關鍵 保鮮術？兼顧安心美味的製程秘密！")]),_c("div",{staticClass:"key__flow"},[_m(0),_m(1),_c("div",{ref:"items",staticClass:"key__items"},[_c("div",{staticClass:"key__item key__item--1",on:{click:function(t){showPop(t,0)}}},[_m(2)]),_c("div",{staticClass:"key__item key__item--2",on:{click:function(t){showPop(t,1)}}},[_m(3)]),_c("div",{staticClass:"key__item key__item--3",on:{click:function(t){showPop(t,2)}}},[_m(4)]),_c("div",{staticClass:"key__item key__item--4",on:{click:function(t){showPop(t,3)}}},[_m(5)]),_c("div",{staticClass:"key__item key__item--5",on:{click:function(t){showPop(t,4)}}},[_m(6)]),_c("div",{staticClass:"key__item key__item--6",on:{click:function(t){showPop(t,5)}}},[_m(7)])])]),_m(8),_m(9)])])]),_m(10)])},__vue__options__.staticRenderFns=[function(){with(this)return _c("div",{staticClass:"key__flow__main"},[_c("div",{staticClass:"key__flow__main-wrap"},[_c("div",{staticClass:"key__flow__bread key__flow__bread--1"}),_c("div",{staticClass:"key__flow__box key__flow__box--1"}),_c("div",{staticClass:"key__flow__bread key__flow__bread--2"}),_c("div",{staticClass:"key__flow__box key__flow__box--2"}),_c("div",{staticClass:"key__flow__line"}),_c("div",{staticClass:"key__flow__bread key__flow__bread--3"})])])},function(){with(this)return _c("div",{staticClass:"key__anis"},[_c("div",{staticClass:"key__ani key__ani--1"}),_c("div",{staticClass:"key__ani key__ani--2"}),_c("div",{staticClass:"key__ani key__ani--3"}),_c("div",{staticClass:"key__ani key__ani--4"}),_c("div",{staticClass:"key__ani key__ani--5"})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("麵包專業講解：鮮度≠添加防腐劑")]),_c("span",{staticClass:"content hide"},[_v("麵包的鮮度取決於微生物生長速度，和製程及保存方式息息相關，控制環境中的溫度、濕度和落菌數及麵包的pH值和水分，麵包不需要防腐劑就能保持鮮度，放置3-4天都維持最佳風味。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :麵包專業講解：鮮度≠添加防腐劑"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :麵包專業講解：鮮度≠添加防腐劑"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :麵包專業講解：鮮度≠添加防腐劑"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節1 : 落菌數隨時監控")]),_c("span",{staticClass:"content hide"},[_v("麵包師傅進到工廠內，要經過一系列的清潔除塵，空間上也有防蟲的防護層，確保生產線上最低的落菌數！")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節1 : 落菌數隨時監控"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節1 : 落菌數隨時監控"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節1 : 落菌數隨時監控"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節2 : 麵糰pH值")]),_c("span",{staticClass:"content hide"},[_v("低溫熟成法讓麵包的酸鹼值不利雜菌生長，不需多添加防腐劑就能維持鮮度。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節2 : 麵糰pH值"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節2 : 麵糰pH值"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節2 : 麵糰pH值"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節3 : 製程各環節溫度控管")]),_c("span",{staticClass:"content hide"},[_v("烘焙時需達到中心溫度到95℃完全熟化、包裝前又要完全降溫....麵包的不同階段都有管控溫度。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節3 : 製程各環節溫度控管"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節3 : 製程各環節溫度控管"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節3 : 製程各環節溫度控管"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節4 : 全程溫濕度監控")]),_c("span",{staticClass:"content hide"},[_v("環境的溫、濕度會影響細菌的生長，專業工廠會全程監控環境溫、濕度，維持在一定標準之下，以增加賞味期限。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節4 : 全程溫濕度監控"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節4 : 全程溫濕度監控"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節4 : 全程溫濕度監控"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節5 : 陳列時包裝保護")]),_c("span",{staticClass:"content hide"},[_v("相較於一般手工烘焙坊的開放性陳列，會受到空氣中的灰塵和落菌，包裝麵包的保鮮期關鍵就在於密封的包裝能阻絕外在環境的影響！")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節5 : 陳列時包裝保護"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節5 : 陳列時包裝保護"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 1 :專業細節5 : 陳列時包裝保護"}})])},function(){with(this)return _c("div",{staticClass:"key__end"},[_c("div",{staticClass:"key__share"},[_c("div",{staticClass:"key__share__item square_fb"},[_c("div",{staticClass:"fb-share-button",attrs:{"data-href":"http://topic.commonhealth.com.tw/uni-bread/key.1.html","data-layout":"button","data-size":"small","data-mobile-iframe":"true"}},[_c("a",{staticClass:"fb-xfbml-parse-ignore",attrs:{target:"_blank",href:"https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2F[object Object]&src=sdkpreparse"}},[_v("分享")])])]),_c("div",{staticClass:"key__share__item square_line"},[_c("div",{staticClass:"line-it-button",staticStyle:{display:"none"},attrs:{"data-lang":"zh_Hant","data-type":"share-c","data-url":"http://topic.commonhealth.com.tw/uni-bread/key.1.html"}})]),_c("div",{staticClass:"key__share__item square_tw"},[_c("a",{staticClass:"twitter-share-button",attrs:{href:"https://twitter.com/intent/tweet?text=康健x統一麵包 安心關鍵 1 一張圖看懂 麵包保鮮關鍵 保鮮術？兼顧安心美味的製程秘密！&url=http://topic.commonhealth.com.tw/uni-bread/key.1.html","data-size":"large"}})]),_c("div",{staticClass:"key__share__item square_gl"},[_c("div",{staticClass:"g-plus",attrs:{"data-action":"share","data-width":"120","data-height":"24","data-href":"http://topic.commonhealth.com.tw/uni-bread/key.1.html"}})])])])},function(){with(this)return _c("a",{staticClass:"index__link-test gtm-event",attrs:{href:"https://goo.gl/dPeLZn","data-category":"bread-click","data-action":"floating-click","data-label":"大會考去試試"}},[_c("span",{staticClass:"btn gtm-event",attrs:{"data-category":"bread-click","data-action":"floating-click","data-label":"大會考去試試"}},[_v("去試試"),_c("span",{staticClass:"icon"})])])},function(){with(this)return _c("div",{staticClass:"key__ft"},[_c("div",{staticClass:"l-container"},[_c("div",{staticClass:"key__end__note"},[_c("div",{staticClass:"key__end__bear"})]),_c("div",{staticClass:"key__end__ctrls"},[_c("a",{staticClass:"next",attrs:{href:"key.2.html"}},[_v("下個關鍵：麵包一致的品質")])])])])}],module.hot&&function(){var t=require("vue-hot-reload-api");t.install(require("vue"),!0),t.compatible&&(module.hot.accept(),module.hot.dispose(function(){__vueify_insert__.cache["\n\n"]=!1,document.head.removeChild(__vueify_style__)}),module.hot.data?t.reload("data-v-11",__vue__options__):t.createRecord("data-v-11",__vue__options__))}();

},{"vue":2,"vue-hot-reload-api":1,"vueify/lib/insert-css":3}],7:[function(require,module,exports){
var __vueify_insert__=require("vueify/lib/insert-css"),__vueify_style__=__vueify_insert__.insert("\n\n");!function(){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={name:"Key2",props:["currentTitle","currentContent","isShowPop"],data:function(){return{}},computed:{},mounted:function(){},methods:{showPop:function(t,a){t.preventDefault(),this.$emit("\bshowpop",t,a)},closePop:function(t){t.preventDefault(),this.$emit("\bclosepop",t)}}}}(),module.exports.__esModule&&(module.exports=module.exports.default);var __vue__options__="function"==typeof module.exports?module.exports.options:module.exports;__vue__options__.render=function(){with(this)return _c("section",{staticClass:"key key2",attrs:{id:"key"}},[_c("div",{staticClass:"key__hd"}),_c("div",{staticClass:"key__bd"},[_c("div",{staticClass:"l-container"},[_c("section",{staticClass:"key__content"},[_c("h1",{staticClass:"key__title"},[_v("安心關鍵 2 一張圖看懂 麵包一致的品質關鍵 30年麵包師傅：紀律，才能確保每一口最佳口感！")]),_c("div",{staticClass:"key__flow"},[_m(0),_m(1),_c("div",{staticClass:"key__items"},[_c("div",{staticClass:"gtm-event key__item key__item--1",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :麵包專業講解：紀律X時間，換取一致的品質"},on:{click:function(t){showPop(t,0)}}},[_m(2)]),_c("div",{staticClass:"gtm-event key__item key__item--2",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節1：人員專業及研發力"},on:{click:function(t){showPop(t,1)}}},[_m(3)]),_c("div",{staticClass:"gtm-event key__item key__item--3",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節2：長時間中種法"},on:{click:function(t){showPop(t,2)}}},[_m(4)]),_c("div",{staticClass:"gtm-event key__item key__item--4",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節3：自製老麵種"},on:{click:function(t){showPop(t,3)}}},[_m(5)]),_c("div",{staticClass:"gtm-event key__item key__item--5",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節4：自動生產的輔助"},on:{click:function(t){showPop(t,4)}}},[_m(6)])])]),_m(7),_m(8)])])]),_m(9)])},__vue__options__.staticRenderFns=[function(){with(this)return _c("div",{staticClass:"key__flow__main"},[_c("div",{staticClass:"key__flow__main-wrap"},[_c("div",{staticClass:"key__flow__bread key__flow__bread--1"}),_c("div",{staticClass:"key__flow__box key__flow__box--1"}),_c("div",{staticClass:"key__flow__bread key__flow__bread--2"}),_c("div",{staticClass:"key__flow__box key__flow__box--2"}),_c("div",{staticClass:"key__flow__line"}),_c("div",{staticClass:"key__flow__bread key__flow__bread--3"})])])},function(){with(this)return _c("div",{staticClass:"key__anis"},[_c("div",{staticClass:"key__ani key__ani--1"}),_c("div",{staticClass:"key__ani key__ani--2"}),_c("div",{staticClass:"key__ani key__ani--3"}),_c("div",{staticClass:"key__ani key__ani--4"}),_c("div",{staticClass:"key__ani key__ani--5"})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("麵包專業講解：紀律X時間，換取一致的品質")]),_c("span",{staticClass:"content hide"},[_v("「每一個麵包都能享受到同樣的幸福，才能讓消費者吃到的都是一樣新鮮和口感的麵包！」高品質麵包不只需要研發者的用心，更需要製程上所有人員的專業和嚴格控管，相較於一般的烘焙坊，機製麵包有專業製程與把關，才能每天為國人供應超過30萬一致的高品質麵包！")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :麵包專業講解：紀律X時間，換取一致的品質"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :麵包專業講解：紀律X時間，換取一致的品質"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :麵包專業講解：紀律X時間，換取一致的品質"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節1：人員專業及研發力")]),_c("span",{staticClass:"content hide"},[_v("高品質的製程從第一線人員開始，工廠的創新速度(專利申請)和員工的專業程度(國家級證照)，都直接影響每個產品的品質！")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節1：人員專業及研發力"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節1：人員專業及研發力"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節1：人員專業及研發力"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節2：長時間中種法")]),_c("span",{staticClass:"content hide"},[_v("麵包要美味一刻也急不得！相較一般烘焙採取短時間直接法；長時間低溫培養，才能讓酵母菌和乳酸菌充分地活化，代謝產生的有機酸、酵素與麵糰作用，才能完整釋放出熟成的香氣、品質更柔軟細緻。不用添加物也能香郁美味！")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節2：長時間中種法"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節2：長時間中種法"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節2：長時間中種法"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節3：自製老麵種")]),_c("span",{staticClass:"content hide"},[_v("低溫熟成的自製老麵種產生乳酸及醋酸等有機酸降低麵糰的pH值，能夠抑制雜菌的生長，讓麵包的賞味期限得以延長，柔軟鮮度能維持得更久。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節3：自製老麵種"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節3：自製老麵種"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節3：自製老麵種"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節4：自動生產的輔助")]),_c("span",{staticClass:"content hide"},[_v("手工+機器做出來的麵包，比全手工更有品質！手工難免有技術侷限和不穩定度，機器可以成為很好的輔助。例如手工包餡的時候很難掌控，但包餡機就能做到皮薄餡多、均勻分布，確保最完美的口感。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節4：自動生產的輔助"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節4：自動生產的輔助"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 2 :專業細節4：自動生產的輔助"}})])},function(){with(this)return _c("div",{staticClass:"key__end"},[_c("div",{staticClass:"key__share"},[_c("div",{staticClass:"key__share__item square_fb"},[_c("div",{staticClass:"fb-share-button",attrs:{"data-href":"http://topic.commonhealth.com.tw/uni-bread/key.2.html","data-layout":"button","data-size":"small","data-mobile-iframe":"true"}},[_c("a",{staticClass:"fb-xfbml-parse-ignore",attrs:{target:"_blank",href:"https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2F[object Object]&src=sdkpreparse"}},[_v("分享")])])]),_c("div",{staticClass:"key__share__item square_line"},[_c("div",{staticClass:"line-it-button",staticStyle:{display:"none"},attrs:{"data-lang":"zh_Hant","data-type":"share-c","data-url":"http://topic.commonhealth.com.tw/uni-bread/key.2.html"}})]),_c("div",{staticClass:"key__share__item square_tw"},[_c("a",{staticClass:"twitter-share-button",attrs:{href:"https://twitter.com/intent/tweet?text=康健x統一麵包  安心關鍵 2 一張圖看懂 麵包一致的品質關鍵 30年麵包師傅：紀律，才能確保每一口最佳口感！&url=http://topic.commonhealth.com.tw/uni-bread/key.2.html","data-size":"large"}})]),_c("div",{staticClass:"key__share__item square_gl"},[_c("div",{staticClass:"g-plus",attrs:{"data-action":"share","data-width":"120","data-height":"24","data-href":"http://topic.commonhealth.com.tw/uni-bread/key.2.html"}})])])])},function(){with(this)return _c("a",{staticClass:"index__link-test gtm-event",attrs:{href:"https://goo.gl/dPeLZn","data-category":"bread-click","data-action":"floating-click","data-label":"大會考去試試"}},[_c("span",{staticClass:"btn gtm-event",attrs:{"data-category":"bread-click","data-action":"floating-click","data-label":"大會考去試試"}},[_v("去試試"),_c("span",{staticClass:"icon"})])])},function(){with(this)return _c("div",{staticClass:"key__ft"},[_c("div",{staticClass:"l-container"},[_c("div",{staticClass:"key__end__note"},[_c("div",{staticClass:"key__end__bear"})]),_c("div",{staticClass:"key__end__ctrls"},[_c("a",{staticClass:"prev",attrs:{href:"key.1.html"}},[_v("上個關鍵：麵包保鮮")]),_c("a",{staticClass:"next",attrs:{href:"key.3.html"}},[_v("下個關鍵：麵包飲食安全")])])])])}],module.hot&&function(){var t=require("vue-hot-reload-api");t.install(require("vue"),!0),t.compatible&&(module.hot.accept(),module.hot.dispose(function(){__vueify_insert__.cache["\n\n"]=!1,document.head.removeChild(__vueify_style__)}),module.hot.data?t.reload("data-v-7",__vue__options__):t.createRecord("data-v-7",__vue__options__))}();

},{"vue":2,"vue-hot-reload-api":1,"vueify/lib/insert-css":3}],8:[function(require,module,exports){
var __vueify_insert__=require("vueify/lib/insert-css"),__vueify_style__=__vueify_insert__.insert("\n\n");!function(){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={name:"Key3",props:["currentTitle","currentContent","isShowPop"],data:function(){return{}},computed:{},mounted:function(){},methods:{showPop:function(t,a){t.preventDefault(),this.$emit("\bshowpop",t,a)},closePop:function(t){t.preventDefault(),this.$emit("\bclosepop",t)}}}}(),module.exports.__esModule&&(module.exports=module.exports.default);var __vue__options__="function"==typeof module.exports?module.exports.options:module.exports;__vue__options__.render=function(){with(this)return _c("section",{staticClass:"key key3",attrs:{id:"key"}},[_c("div",{staticClass:"key__hd"}),_c("div",{staticClass:"key__bd"},[_c("div",{staticClass:"l-container"},[_c("section",{staticClass:"key__content"},[_c("h1",{staticClass:"key__title"},[_v("安心關鍵 3 一張圖看懂 麵包飲食安全關鍵 食安微角落靠專業自律！烘焙業龍頭大廠這樣做")]),_c("div",{staticClass:"key__flow"},[_m(0),_m(1),_c("div",{staticClass:"key__items"},[_c("div",{staticClass:"gtm-event key__item key__item--1 gtm-event",attrs:{"data-action":"popup-click","data-label":"安心關鍵 3 :麵包專業講解：<br/>食安微角落的自律把關才有食品安全!","data-category":"bread-click"},on:{click:function(t){showPop(t,0)}}},[_m(2)]),_c("div",{staticClass:"gtm-event key__item key__item--2 gtm-event",attrs:{"data-action":"popup-click","data-label":"安心關鍵 3 :專業細節1：嚴格採購原則原料品質把關","data-category":"bread-click"},on:{click:function(t){showPop(t,1)}}},[_m(3)]),_c("div",{staticClass:"gtm-event key__item key__item--3 gtm-event",attrs:{"data-action":"popup-click","data-label":"安心關鍵 3 :專業細節2：溯源管理原料源頭把關","data-category":"bread-click"},on:{click:function(t){showPop(t,2)}}},[_m(4)]),_c("div",{staticClass:"gtm-event key__item key__item--4 gtm-event",attrs:{"data-action":"popup-click","data-label":"安心關鍵 3 :專業細節3：嚴格原料及成品檢驗","data-category":"bread-click"},on:{click:function(t){showPop(t,3)}}},[_m(5)]),_c("div",{staticClass:"gtm-event key__item key__item--5 gtm-event",attrs:{"data-action":"popup-click","data-label":"安心關鍵 3 :專業細節4：烹飪器皿的安全性","data-category":"bread-click"},on:{click:function(t){showPop(t,4)}}},[_m(6)]),_c("div",{staticClass:"gtm-event key__item key__item--6 gtm-event",attrs:{"data-action":"popup-click","data-label":"安心關鍵 3 :專業細節5：體制外食安中心監督","data-category":"bread-click"},on:{click:function(t){showPop(t,5)}}},[_m(7)])])]),_m(8),_m(9)])])]),_m(10)])},__vue__options__.staticRenderFns=[function(){with(this)return _c("div",{staticClass:"key__flow__main"},[_c("div",{staticClass:"key__flow__main-wrap"},[_c("div",{staticClass:"key__flow__bread key__flow__bread--1"}),_c("div",{staticClass:"key__flow__box key__flow__box--1"}),_c("div",{staticClass:"key__flow__bread key__flow__bread--2"}),_c("div",{staticClass:"key__flow__box key__flow__box--2"}),_c("div",{staticClass:"key__flow__line"}),_c("div",{staticClass:"key__flow__bread key__flow__bread--3"})])])},function(){with(this)return _c("div",{staticClass:"key__anis"},[_c("div",{staticClass:"key__ani key__ani--1"}),_c("div",{staticClass:"key__ani key__ani--2"}),_c("div",{staticClass:"key__ani key__ani--3"}),_c("div",{staticClass:"key__ani key__ani--4"}),_c("div",{staticClass:"key__ani key__ani--5"})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("麵包專業講解：<br/>食安微角落的自律把關才有食品安全!")]),_c("span",{staticClass:"content hide"},[_v("食品真的是良心事業！平價產品卻有高標準、高成本的自律機制，麵包製程不複雜，但食品安全關鍵在於魔鬼細節，幾大關鍵點是民眾和其他烘焙業者要參考學習的。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :麵包專業講解：<br/>食安微角落的自律把關才有食品安全!"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :麵包專業講解：<br/>食安微角落的自律把關才有食品安全!"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :麵包專業講解：<br/>食安微角落的自律把關才有食品安全!"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節1：嚴格採購原則原料品質把關")]),_c("span",{staticClass:"content hide"},[_v("原料的品質和等級每批都不同，內部要訂定嚴格的採購原則，確保產品的食安品質。例如不得含防腐劑、到貨的原料保存期限，在採購時捨棄能降低成本的大量購買，而是用少量訂單的方式逐批採購，維持原料的鮮度。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節1：嚴格採購原則原料品質把關"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節1：嚴格採購原則原料品質把關"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節1：嚴格採購原則原料品質把關"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節2：溯源管理原料源頭把關")]),_c("span",{staticClass:"content hide"},[_v("食安危機常出現於源頭，大型的烘焙品牌才有力量前往源頭要求與檢驗。以雞蛋為例，從畜牧場使用的水、飼料、養殖環境，到液蛋的藥物殘留檢測、液蛋全程運輸溫控，都是食安的重要把關作為。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節2：溯源管理原料源頭把關"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節2：溯源管理原料源頭把關"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節2：溯源管理原料源頭把關"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節3：嚴格原料及成品檢驗")]),_c("span",{staticClass:"content hide"},[_v("食品大廠除了能有嚴密的供應商管理，將採購風險降到最低，進廠生產到出貨也需要嚴格「自主檢驗」。例如金屬、包裝等食安指標檢測，確認安全無虞才能出貨。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節3：嚴格原料及成品檢驗"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節3：嚴格原料及成品檢驗"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節3：嚴格原料及成品檢驗"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節4：烹飪器皿的安全性")]),_c("span",{staticClass:"content hide"},[_v("烹飪器皿的材質風險、過度使用都可能導致食安問題的發生，任何細節都不可輕忽。例如烤盤的使用紀錄、定期更換，在所有接觸到原料的器具材質也都應有嚴格的要求。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節4：烹飪器皿的安全性"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節4：烹飪器皿的安全性"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節4：烹飪器皿的安全性"}})])},function(){with(this)return _c("div",{staticClass:"ani-wrap"},[_c("span",{staticClass:"title hide"},[_v("專業細節5：體制外食安中心監督")]),_c("span",{staticClass:"content hide"},[_v("除了自主管理，第三方單位的不定期抽檢也是食安維護不懈怠的動能。專業良心的食品品牌會有「食安警察」機制，隨時把關風險、嚴格監控，幫助民眾安心飲食。")]),_c("span",{staticClass:"pc gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節5：體制外食安中心監督"}}),_c("span",{staticClass:"mb gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節5：體制外食安中心監督"}}),_c("div",{staticClass:"icon gtm-event",attrs:{"data-category":"bread-click","data-action":"popup-click","data-label":"安心關鍵 3 :專業細節5：體制外食安中心監督"}})])},function(){with(this)return _c("div",{staticClass:"key__end"},[_c("div",{staticClass:"key__share"},[_c("div",{staticClass:"key__share__item square_fb"},[_c("div",{staticClass:"fb-share-button",attrs:{"data-href":"http://topic.commonhealth.com.tw/uni-bread/key.3.html","data-layout":"button","data-size":"small","data-mobile-iframe":"true"}},[_c("a",{staticClass:"fb-xfbml-parse-ignore",attrs:{target:"_blank",href:"https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2F[object Object]&src=sdkpreparse"}},[_v("分享")])])]),_c("div",{staticClass:"key__share__item square_line"},[_c("div",{staticClass:"line-it-button",staticStyle:{display:"none"},attrs:{"data-lang":"zh_Hant","data-type":"share-c","data-url":"http://topic.commonhealth.com.tw/uni-bread/key.3.html"}})]),_c("div",{staticClass:"key__share__item square_tw"},[_c("a",{staticClass:"twitter-share-button",attrs:{href:"https://twitter.com/intent/tweet?text=康健x統一麵包 安心關鍵 1 一張圖看懂 麵包保鮮關鍵 保鮮術？兼顧安心美味的製程秘密！&url=http://topic.commonhealth.com.tw/uni-bread/key.3.html","data-size":"large"}})]),_c("div",{staticClass:"key__share__item square_gl"},[_c("div",{staticClass:"g-plus",attrs:{"data-action":"share","data-width":"120","data-height":"24","data-href":"http://topic.commonhealth.com.tw/uni-bread/key.3.html"}})])])])},function(){with(this)return _c("a",{staticClass:"index__link-test gtm-event",attrs:{href:"https://goo.gl/dPeLZn","data-category":"bread-click","data-action":"floating-click","data-label":"大會考去試試"}},[_c("span",{staticClass:"btn gtm-event",attrs:{"data-category":"bread-click","data-action":"floating-click","data-label":"大會考去試試"}},[_v("去試試"),_c("span",{staticClass:"icon"})])])},function(){with(this)return _c("div",{staticClass:"key__ft"},[_c("div",{staticClass:"l-container"},[_c("div",{staticClass:"key__end__note"},[_c("div",{staticClass:"key__end__bear"})]),_c("div",{staticClass:"key__end__ctrls"},[_c("a",{staticClass:"prev",attrs:{href:"key.2.html"}},[_v("上個關鍵：麵包一致的品質")])])])])}],module.hot&&function(){var t=require("vue-hot-reload-api");t.install(require("vue"),!0),t.compatible&&(module.hot.accept(),module.hot.dispose(function(){__vueify_insert__.cache["\n\n"]=!1,document.head.removeChild(__vueify_style__)}),module.hot.data?t.reload("data-v-8",__vue__options__):t.createRecord("data-v-8",__vue__options__))}();

},{"vue":2,"vue-hot-reload-api":1,"vueify/lib/insert-css":3}],9:[function(require,module,exports){
var __vueify_insert__=require("vueify/lib/insert-css"),__vueify_style__=__vueify_insert__.insert("\n\n");!function(){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={name:"Menu",data:function(){return{isMobile:!1,isShowMenu:!1,isShowSubMenu:!1}},computed:{},mounted:function(){var t=this;IsMobile||$("#pageMain").on("click",function(e){t.isShowMenu&&t.closeSubMenu(e)})},methods:{toggleSubMenu:function(t){t.preventDefault(),this.isShowSubMenu=!this.isShowSubMenu},toggleMenu:function(t){t.preventDefault(),IsMobile&&(this.isShowMenu=!this.isShowMenu)},closeSubMenu:function(t){this.isShowSubMenu=!1}}}}(),module.exports.__esModule&&(module.exports=module.exports.default);var __vue__options__="function"==typeof module.exports?module.exports.options:module.exports;__vue__options__.render=function(){with(this)return _c("nav",{staticClass:"nav",class:{"nav--active":isShowMenu},attrs:{itemscope:"itemscope",itemtype:"http://schema.org/SiteNavigationElement"}},[_c("div",{staticClass:"l-container"},[_c("div",{staticClass:"nav-bd clearfix"},[_m(0),_m(1),_c("div",{staticClass:"nav-btn",on:{click:function(t){toggleMenu(t)}}},[_c("div",{staticClass:"one"}),_c("div",{staticClass:"two"}),_c("div",{staticClass:"three"})]),_m(2),_c("div",{staticClass:"nav-menu",class:{"nav-menu--active":isShowMenu},attrs:{role:"navigation"}},[_c("ul",{staticClass:"clearfix"},[_m(3),_c("li",{staticClass:"nav-item nav-item--parent",class:{active:isShowSubMenu}},[_c("a",{attrs:{href:"\b/",alt:"麵包小學堂",itemprop:"url",title:"麵包小學堂"},on:{click:function(t){toggleSubMenu(t)}}},[_c("span",[_v("麵包小學堂")])]),_c("transition",{attrs:{name:"fade","enter-active-class":"animated fadeIn","leave-active-class":"animated fadeOut"}},[_c("div",{directives:[{name:"show",rawName:"v-show",value:isShowSubMenu,expression:"isShowSubMenu"}],staticClass:"nav-sub-wrap"},[_c("ul",{staticClass:"nav-sub-menu"},[_c("li",{staticClass:"nav-sub-menu__item"},[_c("a",{attrs:{href:"key.1.html",alt:"保鮮術？兼顧安心美味的製程秘密！",itemprop:"url",title:"保鮮術？兼顧安心美味的製程秘密！"}},[_c("span",[_v("保鮮術？兼顧安心美味的製程秘密！")])])]),_c("li",{staticClass:"nav-sub-menu__item"},[_c("a",{attrs:{href:"key.2.html",alt:"30年麵包師傅：紀律，才能確保每一口最佳口感！",itemprop:"url",title:"30年麵包師傅：紀律，才能確保每一口最佳口感！"}},[_c("span",[_v("30年麵包師傅：紀律，才能確保每一口最佳口感！")])])]),_c("li",{staticClass:"nav-sub-menu__item"},[_c("a",{attrs:{href:"key.3.html",alt:"食安微角落靠專業自律！烘焙業龍頭大廠這樣做",itemprop:"url",title:"食安微角落靠專業自律！烘焙業龍頭大廠這樣做"}},[_c("span",[_v("食安微角落靠專業自律！烘焙業龍頭大廠這樣做")])])])])])])],1),_m(4)])])])])])},__vue__options__.staticRenderFns=[function(){with(this)return _c("h1",{staticClass:"nav-logo"},[_c("a",{staticClass:"hide-text",attrs:{href:"index.html",alt:"康健x統一麵包",title:"康健x統一麵包"}},[_c("span",[_v("康健x統一麵包")])])])},function(){with(this)return _c("div",{staticClass:"nav__home"},[_c("a",{attrs:{href:"index.html"}},[_c("span",{staticClass:"nav-home-link hide-text"},[_v("回首頁")])])])},function(){with(this)return _c("div",{staticClass:"nav-soical"},[_c("div",{staticClass:"nav-soical__item"},[_c("div",{staticClass:"fb_share",attrs:{href:""}},[_c("div",{staticClass:"fb-share-button",attrs:{"data-href":"http://topic.commonhealth.com.tw/uni-bread/index.html","data-layout":"button","data-size":"small","data-mobile-iframe":"true"}},[_c("a",{staticClass:"fb-xfbml-parse-ignore",attrs:{target:"_blank",href:"https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Ftopic.commonhealth.com.tw/uni-bread/index.html&src=sdkpreparse"}},[_v("分享")])])])]),_c("div",{staticClass:"nav-soical__item"},[_c("a",{staticClass:"line_share",attrs:{href:""}},[_c("div",{staticClass:"line-it-button",staticStyle:{display:"none"},attrs:{"data-lang":"zh_Hant","data-type":"share-c","data-url":"http://topic.commonhealth.com.tw/uni-bread/index.html"}})])])])},function(){with(this)return _c("li",{staticClass:"nav-item"},[_c("a",{attrs:{href:"index.html",alt:"麵包大解密",itemprop:"url",title:"麵包大解密"}},[_c("span",[_v("麵包大解密")])])])},function(){with(this)return _c("li",{staticClass:"nav-item"},[_c("a",{attrs:{href:"test.html",alt:"麵包大會考",itemprop:"url",title:"麵包大會考"}},[_c("span",[_v("麵包大會考")])])])}],__vue__options__._scopeId="data-v-1",module.hot&&function(){var t=require("vue-hot-reload-api");t.install(require("vue"),!0),t.compatible&&(module.hot.accept(),module.hot.dispose(function(){__vueify_insert__.cache["\n\n"]=!1,document.head.removeChild(__vueify_style__)}),module.hot.data?t.reload("data-v-1",__vue__options__):t.createRecord("data-v-1",__vue__options__))}();

},{"vue":2,"vue-hot-reload-api":1,"vueify/lib/insert-css":3}],10:[function(require,module,exports){
var __vueify_insert__=require("vueify/lib/insert-css"),__vueify_style__=__vueify_insert__.insert("\n\n");!function(){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={name:"Qa",data:function(){return{isShowResult:!1,displayResult:!1,currentSelected:-1,currentCount:0,timeCount:5,currentQuestion:0,isStart:!1,startTimeCount:5,typeNames:["一般麵包知識題","包裝麵包認知題","麵包達人得分題"],ans:[1,2,2,3,1,2,2,1],selectedAns:[],selectedAnsResult:[],types:[1,1,1,2,2,2,3,3],questions:[{title:"製成麵包需要哪四大基本元素？",type:"一般麵包知識題",options:["麵粉、水、<br>鹽、酵母","麵粉、水、<br>油脂、蛋"]},{title:"哪個菌種作用，讓麵包可以蓬鬆柔軟？",type:"一般麵包知識題",options:["我覺得是<br>乳酸菌","應該是<br>酵母菌"]},{title:"麵包不添加防腐劑，會很容易發霉？",type:"一般麵包知識題",options:["好像是","不一定吧"]},{title:"年輕媽媽購買麵包給小朋友吃時，應該建議她注意下列哪項？",type:"包裝麵包認知題",options:["原料、營養標示、<br>過敏原宣稱","製造日期、<br>保存期限","以上皆是"]},{title:"麵包剛出爐，應該控制什麼環境因子來維持鮮度？",type:"包裝麵包認知題",options:["溫濕度","光線明暗度"]},{title:"以下哪一個是臺灣人記憶深刻的麵包品牌logo？",type:"包裝麵包認知題",options:['<img src="./images/qa-logo-0.png">','<img src="./images/qa-logo.png">']},{title:"哪種麵包的製作方法，需費時較長時間？",type:"麵包達人得分題",options:["我知道，是直接法","我超懂，是中種法"]},{title:"麵包多以下哪個元素，能有較佳風味？",type:"麵包達人得分題",options:["低溫熟成的<br>自製老麵種","單一成分的<br>純麵粉"]}],lvTotalCount:{lv1Count:null,lv2Count:null,lv3Count:null}}},computed:{},mounted:function(){for(var t=this,e=setInterval(function(){var s=t.startTimeCount;t.startTimeCount<=0?(clearInterval(e),setTimeout(function(){t.resetTimeCount(),t.isStart=!0},500)):(s--,t.startTimeCount=s)},1e3),s=0;s<8;s++)this.selectedAns.push(-1),this.selectedAnsResult.push(!1);_firebase.database().ref().on("value",function(e){t.lvTotalCount={lv1Count:e.child("lv1Count").val(),lv2Count:e.child("lv2Count").val(),lv3Count:e.child("lv3Count").val()}})},timeInterval:null,methods:{resetTimeCount:function(){var t=this;this.timeCount=5,this.timeInterval=setInterval(function(){var e=t.timeCount;t.timeCount<=0?(clearInterval(t.timeInterval),t.checkAns(t.currentQuestion,-1)):(e--,t.timeCount=e)},1e3)},resetToNextQuestion:function(){this.currentQuestion=Math.min(7,this.currentQuestion+1),this.isShowResult=!1,this.displayResult=!1,this.currentSelected=-1,this.resetTimeCount()},checkAns:function(t,e){var s=this;this.selectedAns[this.currentQuestion]=e;var i=e==this.ans[t];if(this.selectedAnsResult[this.currentQuestion]=i,this.displayResult=i,this.isShowResult=!0,this.currentQuestion<7)setTimeout(function(){s.resetToNextQuestion()},1500);else{var a=0;$(this.selectedAnsResult).each(function(t,e){e&&a++}),this.submitResult(a)}},submitResult:function(t){var e=1;t<=4?e=1:t<=6?e=2:t<=8&&(e=3);var s={};s["lv"+e+"Count"]=this.lvTotalCount["lv"+e+"Count"]+1,console.log(!isNaN(s["lv"+e+"Count"])),isNaN(s["lv"+e+"Count"])||_firebase.database().ref().update(s,function(e){setTimeout(function(){location="./result.html?count="+t},1500)})},selectedOption:function(t,e,s){t.preventDefault(),this.currentSelected=s,clearInterval(this.timeInterval),this.checkAns(e,s)}}}}(),module.exports.__esModule&&(module.exports=module.exports.default);var __vue__options__="function"==typeof module.exports?module.exports.options:module.exports;__vue__options__.render=function(){with(this)return _c("section",{staticClass:"qa",attrs:{id:"qa"}},[isShowResult?_c("div",{staticClass:"qa__mask"}):_e(),isShowResult?_c("div",{staticClass:"qa__result",class:{ok:displayResult,error:!displayResult}}):_e(),_c("div",{staticClass:"qa__bd"},[_c("div",{staticClass:"qa__content",class:{fixed4:3==currentQuestion}},[_c("div",{staticClass:"l-container"},[isStart?_e():_c("div",{staticClass:"qa__start"},[_c("div",{staticClass:"l-vm"},[_c("div",{staticClass:"l-vm__content"},[_m(0),_c("div",{staticClass:"number"},[_v(_s(startTimeCount))])])])]),_c("transition-group",{attrs:{name:"fade","enter-active-class":"animated fadeInRight","leave-active-class":"animated fadeOutLeft",tag:"div"}},_l(questions,function(t,e){return e==currentQuestion?_c("div",{key:e,staticClass:"qa-wrap"},[_c("div",{staticClass:"l-vm"},[_c("div",{staticClass:"l-vm__content"},[_c("div",{staticClass:"qa__info"},[_c("div",{staticClass:"qa__step"},[_c("span",[_v(_s(timeCount))])]),_c("div",{staticClass:"qa__progress"},[_c("span",{staticClass:"display-bar"})])]),_c("div",{staticClass:"qa__type"},[_c("span",[_v(_s(t.type))])]),_c("div",{staticClass:"qa__main clearfix"},[_c("div",{staticClass:"qa__q clearfix"},[_c("span",{staticClass:"icon"},[_v("Q")]),_c("span",{staticClass:"number"},[_v(_s(e+1))]),_c("span",{staticClass:"text"},[_v(_s(t.title))])]),_c("div",{staticClass:"qa__list"},[_c("div",{staticClass:"qa__items"},_l(t.options,function(t,s){return _c("div",{key:s,staticClass:"qa__item gtm-event",class:{active:s+1==currentSelected&&isShowResult,disabled:s+1!=currentSelected&&isShowResult},attrs:{"data-category":"bread-click","data-action":"ans-click","data-label":t},on:{click:function(t){selectedOption(t,e,s+1)}}},[_c("div",{staticClass:"text gtm-event",attrs:{"data-category":"bread-click","data-action":"ans-click","data-label":t},domProps:{innerHTML:_s(t)}})])}))])])])])]):_e()}))],1)])])])},__vue__options__.staticRenderFns=[function(){with(this)return _c("p",{staticClass:"title"},[_c("span",{staticClass:"tipinfo"},[_v("注意")]),_c("span",{staticClass:"text"},[_v("【準備開始囉！】"),_c("br",{staticClass:"mbOnly"}),_v(" 一題限時５秒回答，未在時間內完成即算答錯~ ")])])}],__vue__options__._scopeId="data-v-3",module.hot&&function(){var t=require("vue-hot-reload-api");t.install(require("vue"),!0),t.compatible&&(module.hot.accept(),module.hot.dispose(function(){__vueify_insert__.cache["\n\n"]=!1,document.head.removeChild(__vueify_style__)}),module.hot.data?t.reload("data-v-3",__vue__options__):t.createRecord("data-v-3",__vue__options__))}();

},{"vue":2,"vue-hot-reload-api":1,"vueify/lib/insert-css":3}],11:[function(require,module,exports){
var __vueify_insert__=require("vueify/lib/insert-css"),__vueify_style__=__vueify_insert__.insert("\n\n");!function(){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=a(require("./ResultChart.vue")),s=a(require("./ResultLibarys.vue"));function a(t){return t&&t.__esModule?t:{default:t}}exports.default={name:"Result",components:{ResultChart:t.default,ResultLibarys:s.default},props:[],data:function(){return{resultType:0}},computed:{},mounted:function(){var t=function(t){t=t.split("+").join(" ");for(var s,a={},e=/[?&]?([^=]+)=([^&]*)/g;s=e.exec(t);)a[decodeURIComponent(s[1])]=decodeURIComponent(s[2]);return a}(document.location.search).count||0;t<=4?this.resultType=0:t<=6?this.resultType=1:t<=8&&(this.resultType=2)},methods:{}}}(),module.exports.__esModule&&(module.exports=module.exports.default);var __vue__options__="function"==typeof module.exports?module.exports.options:module.exports;__vue__options__.render=function(){with(this)return _c("div",[_c("section",{staticClass:"result"},[_c("div",{staticClass:"result__hd"}),_c("div",{staticClass:"result__bd"},[_c("div",{staticClass:"l-container"},[0==resultType?_c("div",[_m(0),_m(1)]):_e(),1==resultType?_c("div",[_m(2),_m(3)]):_e(),2==resultType?_c("div",[_m(4),_m(5)]):_e(),_m(6)])]),_c("div",{staticClass:"result__ft"})]),_c("ResultLibarys"),_c("ResultChart")],1)},__vue__options__.staticRenderFns=[function(){with(this)return _c("div",{staticClass:"result1 active"},[_c("div",{staticClass:"title"},[_c("span",{staticClass:"mark"},[_v("初級")]),_v("麵包新手-復古好滋味")]),_c("div",{staticClass:"desc"},[_v("Wow！愛麵包的你，雖然很享受每一口的溫暖美味，但不能不了解麵包的製作細節呀~~快往下看熊健康的麵包知識大解析，感受食的安心，再挑戰一次！")]),_c("div",{staticClass:"img-wrap"},[_c("img",{attrs:{src:"./images/end-bread1.png"}})])])},function(){with(this)return _c("div",{staticClass:"result__share"},[_c("p",{staticClass:"text"},[_v("分享你的結果")]),_c("div",{staticClass:"result__share__items"},[_c("div",{staticClass:"result__share__item square_fb"},[_c("div",{staticClass:"fb-share-button",attrs:{"data-href":"http://topic.commonhealth.com.tw/uni-bread/result1.html","data-layout":"button","data-size":"small","data-mobile-iframe":"true"}},[_c("a",{staticClass:"fb-xfbml-parse-ignore",attrs:{target:"_blank",href:"https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2F[object Object]&src=sdkpreparse"}},[_v("分享")])])]),_c("div",{staticClass:"result__share__item square_line"},[_c("div",{staticClass:"line-it-button",staticStyle:{display:"none"},attrs:{"data-lang":"zh_Hant","data-type":"share-c","data-url":"http://topic.commonhealth.com.tw/uni-bread/result1.html"}})]),_c("div",{staticClass:"result__share__item square_tw"},[_c("a",{staticClass:"twitter-share-button",attrs:{href:"https://twitter.com/intent/tweet?text=喜愛麵包的我，原來是：初級麵包新手-復古好滋味！麵包百百種，麵包知識更是萬萬種~快來挑戰限時麵包大會考，由康健熊健康出題，測試你是不是麵包達人唷&url=http://topic.commonhealth.com.tw/uni-bread/result1.html","data-size":"large"}})]),_c("div",{staticClass:"result__share__item square_gl"},[_c("div",{staticClass:"g-plus",attrs:{"data-action":"share","data-width":"120","data-height":"24","data-href":"http://topic.commonhealth.com.tw/uni-bread/result1.html"}})])])])},function(){with(this)return _c("div",{staticClass:"result2 active"},[_c("div",{staticClass:"title"},[_c("span",{staticClass:"mark"},[_v("中高級")]),_v("麵包小當家-意猶未盡的美味")]),_c("div",{staticClass:"desc"},[_v("不錯喔！懂得分辨美味麵包，你就像麵包界的青蔥起士，讓人熟悉又意猶未盡！想知道如何得到經典麵包？快往下看熊健康麵包秘密大解析，再挑戰一次！")]),_c("div",{staticClass:"img-wrap"},[_c("img",{attrs:{src:"./images/end-bread2.png"}})])])},function(){with(this)return _c("div",{staticClass:"result__share"},[_c("p",{staticClass:"text"},[_v("分享你的結果")]),_c("div",{staticClass:"result__share__items"},[_c("div",{staticClass:"result__share__item square_fb"},[_c("div",{staticClass:"fb-share-button",attrs:{"data-href":"http://topic.commonhealth.com.tw/uni-bread/result2.html","data-layout":"button","data-size":"small","data-mobile-iframe":"true"}},[_c("a",{staticClass:"fb-xfbml-parse-ignore",attrs:{target:"_blank",href:"https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2F[object Object]&src=sdkpreparse"}},[_v("分享")])])]),_c("div",{staticClass:"result__share__item square_line"},[_c("div",{staticClass:"line-it-button",staticStyle:{display:"none"},attrs:{"data-lang":"zh_Hant","data-type":"share-c","data-url":"http://topic.commonhealth.com.tw/uni-bread/result2.html"}})]),_c("div",{staticClass:"result__share__item square_tw"},[_c("a",{staticClass:"twitter-share-button",attrs:{href:"https://twitter.com/intent/tweet?text=喜愛麵包的我，原來是：高級麵包小當家，意猶未盡的美味！麵包百百種，麵包知識更是萬萬種~快來挑戰限時麵包大會考，由康健熊健康出題，測試你是不是麵包達人唷&url=http://topic.commonhealth.com.tw/uni-bread/result2.html","data-size":"large"}})]),_c("div",{staticClass:"result__share__item square_gl"},[_c("div",{staticClass:"g-plus",attrs:{"data-action":"share","data-width":"120","data-height":"24","data-href":"http://topic.commonhealth.com.tw/uni-bread/result2.html"}})])])])},function(){with(this)return _c("div",{staticClass:"result3 active"},[_c("div",{staticClass:"title"},[_c("span",{staticClass:"mark"},[_v("高階")]),_v("麵包專業達人-經典中的經典")]),_c("div",{staticClass:"desc"},[_v(" 超棒的！不只麵包細節，連製程、購買細節都考不倒你啊！知性與理性交織，簡直是麵包界的海鹽羅宋！往下看看熊健康的麵包知識大解析，為你的智慧再添經典。")]),_c("div",{staticClass:"img-wrap"},[_c("img",{attrs:{src:"./images/end-bread3.png"}})])])},function(){with(this)return _c("div",{staticClass:"result__share"},[_c("p",{staticClass:"text"},[_v("分享你的結果")]),_c("div",{staticClass:"result__share__items"},[_c("div",{staticClass:"result__share__item square_fb"},[_c("div",{staticClass:"fb-share-button",attrs:{"data-href":"http://topic.commonhealth.com.tw/uni-bread/result3.html","data-layout":"button","data-size":"small","data-mobile-iframe":"true"}},[_c("a",{staticClass:"fb-xfbml-parse-ignore",attrs:{target:"_blank",href:"https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2F[object Object]&src=sdkpreparse"}},[_v("分享")])])]),_c("div",{staticClass:"result__share__item square_line"},[_c("div",{staticClass:"line-it-button",staticStyle:{display:"none"},attrs:{"data-lang":"zh_Hant","data-type":"share-c","data-url":"http://topic.commonhealth.com.tw/uni-bread/result3.html"}})]),_c("div",{staticClass:"result__share__item square_tw"},[_c("a",{staticClass:"twitter-share-button",attrs:{href:"https://twitter.com/intent/tweet?text=喜愛麵包的我，原來是：高階麵包專業達人，經典中的經典！麵包百百種，麵包知識更是萬萬種~快來挑戰限時麵包大會考，由康健熊健康出題，測試你是不是麵包達人唷&url=http://topic.commonhealth.com.tw/uni-bread/result3.html","data-size":"large"}})]),_c("div",{staticClass:"result__share__item square_gl"},[_c("div",{staticClass:"g-plus",attrs:{"data-action":"share","data-width":"120","data-height":"24","data-href":"http://topic.commonhealth.com.tw/uni-bread/result3.html"}})])])])},function(){with(this)return _c("div",{staticClass:"result__more"},[_c("p",{staticClass:"text"},[_v("想知道所有答案嗎？")]),_c("a",{staticClass:"btn",attrs:{href:"#libarys"}},[_c("span",[_v("往下看更多解答                   ")])])])}],__vue__options__._scopeId="data-v-4",module.hot&&function(){var t=require("vue-hot-reload-api");t.install(require("vue"),!0),t.compatible&&(module.hot.accept(),module.hot.dispose(function(){__vueify_insert__.cache["\n\n"]=!1,document.head.removeChild(__vueify_style__)}),module.hot.data?t.reload("data-v-4",__vue__options__):t.createRecord("data-v-4",__vue__options__))}();

},{"./ResultChart.vue":12,"./ResultLibarys.vue":13,"vue":2,"vue-hot-reload-api":1,"vueify/lib/insert-css":3}],12:[function(require,module,exports){
var __vueify_insert__=require("vueify/lib/insert-css"),__vueify_style__=__vueify_insert__.insert("\n\n");!function(){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={name:"ResultChart",props:[],data:function(){return{lv1Count:0,lv2Count:0,lv3Count:0,totalSum:0,userCorrectcCount:0,lv1DisplayNumber:0,lv2DisplayNumber:0,lv3DisplayNumber:0}},computed:{},mounted:function(){var t=this;var s=function(t){t=t.split("+").join(" ");for(var s,e={},a=/[?&]?([^=]+)=([^&]*)/g;s=a.exec(t);)e[decodeURIComponent(s[1])]=decodeURIComponent(s[2]);return e}(document.location.search);this.userCorrectcCount=s.count||0,_firebase.database().ref().on("value",function(s){t.lv1Count=s.child("lv1Count").val(),t.lv2Count=s.child("lv2Count").val(),t.lv3Count=s.child("lv3Count").val(),t.totalSum=t.lv1Count+t.lv2Count+t.lv3Count,t.lv1DisplayNumber=Math.floor(t.lv1Count/t.totalSum*100),t.lv2DisplayNumber=Math.floor(t.lv2Count/t.totalSum*100),t.lv3DisplayNumber=100-t.lv1DisplayNumber-t.lv2DisplayNumber,t.runChart()})},methods:{runChart:function(){var t=new ScrollMagic.Controller,s=$(this.$refs.userBar).width(),e=$(this.$refs.user).width(),a=new TimelineMax({delay:1,smoothChildTiming:!0}),r=10*Math.pow(this.lv1Count/this.totalSum*100,.5),i=10*Math.pow(this.lv2Count/this.totalSum*100,.5),c=10*Math.pow(this.lv3Count/this.totalSum*100,.5);a.add(TweenMax.fromTo($(this.$refs.bar1),1,{height:"0%"},{height:r+"%"}),0),a.add(TweenMax.fromTo($(this.$refs.user),1,{transformOrigin:"50% 50%",x:"-"+(e/2-5)+"px"},{x:this.userCorrectcCount/8*s-e/2+5+"px"}),0),a.add(TweenMax.fromTo($(this.$refs.userDisplayBar),1,{width:"0%"},{width:this.userCorrectcCount/8*100+"%"}),0),a.add(TweenMax.fromTo($(this.$refs.bar2),1,{height:"0%"},{height:i+"%"}),"-=1"),a.add(TweenMax.fromTo($(this.$refs.bar3),1,{height:"0%"},{height:c+"%"}),"-=1"),IsMobile||new ScrollMagic.Scene({duration:100,offset:-100}).setPin(a).addTo(t)}}}}(),module.exports.__esModule&&(module.exports=module.exports.default);var __vue__options__="function"==typeof module.exports?module.exports.options:module.exports;__vue__options__.render=function(){with(this)return _c("section",{staticClass:"result-chart",attrs:{id:"result-chart"}},[_c("div",{staticClass:"l-container"},[_c("div",{staticClass:"title"},[_v("玩過的人都對幾題")]),_c("div",{staticClass:"chart"},[_c("div",{staticClass:"chart-canvas",attrs:{id:"chart-canvas"}},[_c("div",{staticClass:"bar-item bar1"},[_c("div",{ref:"bar1",staticClass:"bar"}),_c("div",{ref:"bar3Text",staticClass:"text"},[_v(_s(lv1DisplayNumber)+"%")])]),_c("div",{staticClass:"bar-item bar2"},[_c("div",{ref:"bar2",staticClass:"bar"}),_c("div",{ref:"bar3Text",staticClass:"text"},[_v(_s(lv2DisplayNumber)+"%")])]),_c("div",{staticClass:"bar-item bar3"},[_c("div",{ref:"bar3",staticClass:"bar"}),_c("div",{ref:"bar3Text",staticClass:"text"},[_v(_s(lv3DisplayNumber)+"%")])])]),_c("div",{ref:"userBar",staticClass:"user-bar"},[_c("div",{ref:"user",staticClass:"people",class:{lv3:userCorrectcCount>=7}}),_c("div",{ref:"userDisplayBar",staticClass:"display-bar"})]),_m(0),_c("div",{staticClass:"y-number clearfix"},[_c("div",{staticClass:"y-number-grid",class:{active:0==userCorrectcCount}},[_c("span",[_v("0")])]),_c("div",{staticClass:"y-number-grid",class:{active:1==userCorrectcCount}},[_c("span",[_v("1")])]),_c("div",{staticClass:"y-number-grid",class:{active:2==userCorrectcCount}},[_c("span",[_v("2")])]),_c("div",{staticClass:"y-number-grid",class:{active:3==userCorrectcCount}},[_c("span",[_v("3")])]),_c("div",{staticClass:"y-number-grid",class:{active:4==userCorrectcCount}},[_c("span",[_v("4")])]),_c("div",{staticClass:"y-number-grid",class:{active:5==userCorrectcCount}},[_c("span",[_v("5")])]),_c("div",{staticClass:"y-number-grid",class:{active:6==userCorrectcCount}},[_c("span",[_v("6")])]),_c("div",{staticClass:"y-number-grid",class:{active:7==userCorrectcCount}},[_c("span",[_v("7")])]),_c("div",{staticClass:"y-number-grid",class:{active:8==userCorrectcCount}},[_c("span",[_v("8")])])])]),_m(1)])])},__vue__options__.staticRenderFns=[function(){with(this)return _c("div",{staticClass:"y-line clearfix"},[_c("span"),_c("span"),_c("span"),_c("span"),_c("span"),_c("span"),_c("span"),_c("span")])},function(){with(this)return _c("div",{staticClass:"result-chart__more"},[_c("a",{staticClass:"btn",attrs:{href:"./qa.html"}},[_c("span",[_v("再挑戰一次  ")])])])}],__vue__options__._scopeId="data-v-9",module.hot&&function(){var t=require("vue-hot-reload-api");t.install(require("vue"),!0),t.compatible&&(module.hot.accept(),module.hot.dispose(function(){__vueify_insert__.cache["\n\n"]=!1,document.head.removeChild(__vueify_style__)}),module.hot.data?t.reload("data-v-9",__vue__options__):t.createRecord("data-v-9",__vue__options__))}();

},{"vue":2,"vue-hot-reload-api":1,"vueify/lib/insert-css":3}],13:[function(require,module,exports){
var __vueify_insert__=require("vueify/lib/insert-css"),__vueify_style__=__vueify_insert__.insert("\n\n");!function(){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={name:"ResultLibarys",props:[],data:function(){return{currentOpened:1}},computed:{},mounted:function(){$(this.$refs["content"+this.currentOpened]).slideDown()},methods:{toogleLibary:function(t,s){var _=$(this.$refs["content"+s]);s==this.currentOpened?(_.slideUp(),this.currentOpened=0):(this.currentOpened=s,_.slideDown())}}}}(),module.exports.__esModule&&(module.exports=module.exports.default);var __vue__options__="function"==typeof module.exports?module.exports.options:module.exports;__vue__options__.render=function(){with(this)return _c("div",{staticClass:"library",attrs:{id:"libarys"}},[_c("div",{staticClass:"libary__group libary__group--1",class:{active:1==currentOpened},on:{click:function(t){toogleLibary(t,1)}}},[_m(0),_c("div",{ref:"content1",staticClass:"libary__content"},[_m(1)])]),_c("div",{staticClass:"libary__group libary__group--2",class:{active:2==currentOpened},on:{click:function(t){toogleLibary(t,2)}}},[_m(2),_c("div",{ref:"content2",staticClass:"libary__content"},[_m(3)])]),_c("div",{staticClass:"libary__group libary__group--3",class:{active:3==currentOpened},on:{click:function(t){toogleLibary(t,3)}}},[_m(4),_c("div",{ref:"content3",staticClass:"libary__content"},[_m(5)])])])},__vue__options__.staticRenderFns=[function(){with(this)return _c("div",{staticClass:"libary__title"},[_c("div",{staticClass:"l-container"},[_c("span",{staticClass:"text"},[_v("一般麵包知識題")]),_c("span",{staticClass:"icon"})])])},function(){with(this)return _c("dl",{staticClass:"l-container"},[_c("div",{staticClass:"main"},[_c("div",{staticClass:"item"},[_c("dt",{staticClass:"q"},[_v("Q. 製成麵包需要哪四大基本元素？")]),_c("dd",{staticClass:"a"},[_v("Ans. 麵粉、水、鹽、酵母")]),_c("dd",{staticClass:"text"},[_v("製作麵包的基本原料包括了水、麵粉、鹽和酵母，臺灣較流行的麵包口味則會再加上油脂、糖和蛋。"),_c("br"),_v("\n[麵粉] 影響口感。麵粉加水揉和時產生筋性，在發酵過程中，酵母產生的二氧化碳封鎖在麵糰中，讓麵包膨脹。"),_c("br"),_v("\n[水] 若發酵時間充足，水能夠充分地滲透到麵粉的深層組織中，也能讓麵包更柔軟保濕。"),_c("br"),_v("\n[鹽]讓麵糰具有柔軟度及彈性。"),_c("br"),_v("\n[酵母] 可使麵糰蓬鬆。"),_c("br")])]),_c("div",{staticClass:"item"},[_c("dt",{staticClass:"q"},[_v("Q. 麵包不添加防腐劑，會很容易發霉？")]),_c("dd",{staticClass:"a"},[_v("Ans. 不一定")]),_c("dd",{staticClass:"text"},[_v("其實麵包是烤熟，並不容易壞，如果環境條件控制好，例如火候、溫濕度、麵包冷透後密封包裝等，可以用不加防腐劑的方式，再延長麵包的保鮮期。"),_c("br"),_v("\n統一麵包為讓麵包更柔軟且不易乾硬，也掌控了麵包的水活性，在不添加添加物的前提下，增加賞味期限。")])]),_c("div",{staticClass:"item"},[_c("dt",{staticClass:"q"},[_v("Q. 哪個菌種作用，讓麵包可以蓬鬆柔軟？")]),_c("dd",{staticClass:"a"},[_v("Ans. 應該是酵母菌")]),_c("dd",{staticClass:"text"},[_v("酵母可使麵糰蓬鬆。"),_c("br"),_v("\n統一麵包研究團隊不斷地技術創新，例如透過使用卵磷脂、蛋黃或是攪拌方式，強化口感綿密的效果。")])])])])},function(){with(this)return _c("div",{staticClass:"libary__title"},[_c("div",{staticClass:"l-container"},[_c("span",{staticClass:"text"},[_v("包裝麵包認知題")]),_c("span",{staticClass:"icon"})])])},function(){with(this)return _c("dl",{staticClass:"l-container"},[_c("div",{staticClass:"main"},[_c("div",{staticClass:"item"},[_c("dt",{staticClass:"q"},[_v("Q. 年輕媽媽購買麵包給小朋友吃時，應該建議她注意下列哪項？")]),_c("dd",{staticClass:"a"},[_v("Ans. 原料、營養標示、製造日期、保存期限…以上皆是")]),_c("dd",{staticClass:"text"},[_v("目前法規只規定包裝食品應有成分及營養標示，對於散裝食品的規範則相對寬鬆，只能期待業者自主標示原料及相關營養訊息。"),_c("br"),_v("\n地方衛生單位的稽核也僅集中於一定規模以上的食品廠，對於坊間烘焙坊，只適用熟食法規來進行微生物汙染源的規範。"),_c("br"),_v("\n大型食品廠在廠房配置、水源及食品衛生專業人員編制等都有規範，並要求業者具備原料溯源和自主檢驗的能力。小規模烘焙坊往往連與上游廠商的議價能力都有限，更遑論做到前往上游供應商查看的自主管理與源頭管理。"),_c("br"),_v("\n如何確保民眾買到安心的商品，除了業者，更依賴消費者自身的選擇與把關！")])]),_c("div",{staticClass:"item"},[_c("dt",{staticClass:"q"},[_v("以下哪一個是台灣最大包裝麵包品牌logo？")]),_c("dd",{staticClass:"a clearfix"},[_v("Ans."),_c("img",{attrs:{src:"./images/end_logoAns.png",alt:""}})]),_c("dd",{staticClass:"text"},[_v(" \n統一麵包於1980年創立，是當時台灣最大、最自動化的機製麵包廠。38年來，統一麵包持續用心烘焙出經典麵包，堅持帶給人們吃的幸福。")])]),_c("div",{staticClass:"item"},[_c("dt",{staticClass:"q"},[_v("Q. 麵包剛出爐，應該控制什麼環境因子來維持鮮度？")]),_c("dd",{staticClass:"a"},[_v("Ans. 溫濕度")]),_c("dd",{staticClass:"text"},[_v("統一麵包生產廠除了有嚴密的清潔消毒，空氣中的落菌數也必須每天監測，全廠區內也均有嚴格的溫、溼度掌控。除了生產線上從半成品到成品的輸送過程，嚴格要求完整的覆蓋保護，包裝後的麵包，從廠內到裝上配送車送到門市，全程都必須控制在28℃ 以下。避免過程中出現任何食安隱憂。")])])])])},function(){with(this)return _c("div",{staticClass:"libary__title"},[_c("div",{staticClass:"l-container"},[_c("span",{staticClass:"text"},[_v("麵包達人得分題")]),_c("span",{staticClass:"icon"})])])},function(){with(this)return _c("dl",{staticClass:"l-container"},[_c("div",{staticClass:"main"},[_c("div",{staticClass:"item"},[_c("dt",{staticClass:"q"},[_v("Q. 哪種麵包的製作方法，需費時較長時間？")]),_c("dd",{staticClass:"a"},[_v("Ans. 中種法（Sponge-Dough Method）")]),_c("dd",{staticClass:"text"},[_v(" \n[直接法] 是我們一般在食譜常見的：把所有的材料混合攪拌，揉好的麵糰直接進行基本發酵、翻麵及最後發酵等步驟。"),_c("br"),_v("\n[中種法] 是師傅為製作更香更軟的麵包會採用的專業方法。"),_c("br"),_v("\n統一麵包生產大廠，堅持用時間換品質，採用專業師傅的做法，以長時間4次發酵「中種法」，讓麵包「慢活」。其中包括基本發酵、延續發酵、中間發酵、最後發酵，才能完成。"),_c("br"),_v("\n中種法製作的麵包更柔軟細緻，但代價是必須付出更長的時間和多一次的攪拌工作，整體而言費時費工。即使是坊間標榜手工的烘焙坊，大部分也都是選擇更快更省事的直接法。")])]),_c("div",{staticClass:"item"},[_c("dt",{staticClass:"q"},[_v("Q. 麵包多以下哪個元素，能有較佳風味？")]),_c("dd",{staticClass:"a clearfix"},[_v("Ans. 低溫熟成的自製老麵種 ")]),_c("dd",{staticClass:"text"},[_v("老麵種是指長時間發酵的麵糰，因為長期發酵，所以會比一般的麵糰香，也會讓麵包口感變好。"),_c("br"),_v("\n統一麵包內部研發自製老麵種，以長時間低溫培養，讓酵母菌和乳酸菌能夠充分地生長。同時，也經過百位認證烘焙師傅的用心監控，只為讓消費者不受時間與空間限制，也能安心享受麵包的美味。")])])])])}],__vue__options__._scopeId="data-v-10",module.hot&&function(){var t=require("vue-hot-reload-api");t.install(require("vue"),!0),t.compatible&&(module.hot.accept(),module.hot.dispose(function(){__vueify_insert__.cache["\n\n"]=!1,document.head.removeChild(__vueify_style__)}),module.hot.data?t.reload("data-v-10",__vue__options__):t.createRecord("data-v-10",__vue__options__))}();

},{"vue":2,"vue-hot-reload-api":1,"vueify/lib/insert-css":3}],14:[function(require,module,exports){
var __vueify_insert__=require("vueify/lib/insert-css"),__vueify_style__=__vueify_insert__.insert("\n\n");!function(){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={name:"Test",data:function(){return{}},computed:{},mounted:function(){for(var t=new TimelineMax({repeat:-1,delay:1,smoothChildTiming:!0,paused:!1,yoyo:!1}),e=new TimelineMax({repeat:0,delay:1,smoothChildTiming:!0,paused:!1,yoyo:!1}),i=0;i<3;i++){t.add(TweenMax.fromTo($(this.$refs["dish"+(i+1)]),1,{opacity:0},{opacity:1}),5.5*i),t.add(TweenMax.to($(this.$refs["dish"+(i+1)]),1,{opacity:0}),5*(i+1))}e.add(TweenMax.fromTo($(this.$refs.title),.6,{opacity:0,y:-50},{opacity:1,y:-0}),0),e.add(TweenMax.fromTo($(this.$refs.cover),.6,{opacity:0,y:-50},{opacity:1,y:-0}),"-=0.3"),e.add(TweenMax.fromTo($(this.$refs.ctrls),.6,{opacity:0,y:-50},{opacity:1,y:-0}),"-=0.3"),e.add(TweenMax.fromTo($(this.$refs.note),.6,{opacity:0,y:-50},{opacity:1,y:-0}),"-=0.3")},methods:{}}}(),module.exports.__esModule&&(module.exports=module.exports.default);var __vue__options__="function"==typeof module.exports?module.exports.options:module.exports;__vue__options__.render=function(){with(this)return _c("section",{staticClass:"index test"},[_c("div",{staticClass:"index__hd"}),_c("div",{staticClass:"index__bd"},[_c("div",{staticClass:"index__content"},[_c("div",{staticClass:"l-container"},[_c("div",{staticClass:"l-vm"},[_c("div",{staticClass:"l-vm__content"},[_c("div",{ref:"title",staticClass:"test__title"},[_v("麵包大會考 快問快答挑戰賽 考驗你的麵包級數 ")]),_c("div",{ref:"cover",staticClass:"index__cover"},[_c("div",{ref:"dish1",staticClass:"index__dish index__dish--1"}),_c("div",{ref:"dish2",staticClass:"index__dish index__dish--2"}),_c("div",{ref:"dish3",staticClass:"index__dish index__dish--3"}),_c("div",{ref:"dish4",staticClass:"index__dish index__dish--4"})]),_c("div",{ref:"ctrls",staticClass:"test__ctrls"},[_m(0)])])])])])]),_c("div",{staticClass:"test__ft"},[_c("div",{ref:"note",staticClass:"test__note"}),_m(1)])])},__vue__options__.staticRenderFns=[function(){with(this)return _c("a",{attrs:{href:"\bqa.html"}},[_c("span",{staticClass:"hideText"},[_v("開始測驗")])])},function(){with(this)return _c("div",{staticClass:"l-container"},[_c("div",{staticClass:"test__bear"})])}],__vue__options__._scopeId="data-v-6",module.hot&&function(){var t=require("vue-hot-reload-api");t.install(require("vue"),!0),t.compatible&&(module.hot.accept(),module.hot.dispose(function(){__vueify_insert__.cache["\n\n"]=!1,document.head.removeChild(__vueify_style__)}),module.hot.data?t.reload("data-v-6",__vue__options__):t.createRecord("data-v-6",__vue__options__))}();

},{"vue":2,"vue-hot-reload-api":1,"vueify/lib/insert-css":3}],15:[function(require,module,exports){
"use strict";var _vue=require("vue"),_vue2=_interopRequireDefault(_vue),_Menu=require("./components/Menu.vue"),_Menu2=_interopRequireDefault(_Menu),_Key=require("./components/Key.vue"),_Key2=_interopRequireDefault(_Key),_Qa=require("./components/Qa.vue"),_Qa2=_interopRequireDefault(_Qa),_Result=require("./components/Result.vue"),_Result2=_interopRequireDefault(_Result),_Index=require("./components/Index.vue"),_Index2=_interopRequireDefault(_Index),_Test=require("./components/Test.vue"),_Test2=_interopRequireDefault(_Test);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}new _vue2.default({el:"#nav",render:function(e){return e(_Menu2.default)}}),$("#key").length>0&&new _vue2.default({el:"#key",render:function(e){var n=location.href,u=0;return n.indexOf("key.1")>-1?u=1:n.indexOf("key.2")>-1?u=2:n.indexOf("key.3")>-1&&(u=3),e(_Key2.default,{props:{currentKeyPage:u}})}}),$("#qa").length>0&&(console.log("init qa"),new _vue2.default({el:"#qa",render:function(e){return e(_Qa2.default)}})),$("#result").length>0&&(console.log("init qa"),new _vue2.default({el:"#result",render:function(e){location.href;return e(_Result2.default,{props:{}})}})),$("#index").length>0&&new _vue2.default({el:"#index",render:function(e){return e(_Index2.default)}}),$("#test").length>0&&new _vue2.default({el:"#test",render:function(e){return e(_Test2.default)}});

},{"./components/Index.vue":4,"./components/Key.vue":5,"./components/Menu.vue":9,"./components/Qa.vue":10,"./components/Result.vue":11,"./components/Test.vue":14,"vue":2}]},{},[15])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

//# sourceMappingURL=bundle.js.map
